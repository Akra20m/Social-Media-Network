{"version":3,"sources":["api/flaskapi.js","actions/index.js","components/Login.js","components/Register.js","components/Main.js","components/PostEdit.js","components/PostsLists.js","components/CreatePost.js","components/Logout.js","components/Dashboard.js","components/App.js","reducers/userReducer.js","reducers/postReducer.js","reducers/index.js","index.js"],"names":["flaskAPI","axios","create","baseURL","Login","onSubmit","values","props","loginUser","input","label","type","required","this","user","status","isLoggedIn","to","className","handleSubmit","Field","name","component","renderInput","errormsg","React","Component","connect","state","dispatch","a","post","response","payload","data","reduxForm","form","Register","createUser","Main","id","PostEdit","editPost","access_token","maxLength","username","ownProps","match","params","token","put","headers","Authorization","console","log","PostsLists","more","fetchSomePosts","length","onClick","deletePost","renderDeleteEdit","role","bind","map","key","renderPosts","Object","fetchPosts","get","delete","CreatePost","createPost","placeholder","rows","Logout","logoutUser","Dashboard","App","path","exact","combineReducers","formReducer","action","_","mapKeys","omit","presistedState","serializedState","localStorage","getItem","JSON","parse","loadFromLocalStorage","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDom","render","document","querySelector","subscribe","stringify","setItem","saveToLocalStorage","getState"],"mappings":"6TAOeA,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAQ,+C,+kBCFL,ICODC,E,2MAWFC,SAAW,SAACC,GACR,EAAKC,MAAMC,UAAUF,I,8EAVO,IAAnBG,EAAkB,EAAlBA,MAAMC,EAAY,EAAZA,MAAMC,EAAM,EAANA,KACrB,OACI,6BACI,+BAAQD,GACR,2CAAWD,EAAX,CAAkBE,KAAMA,EAAMC,UAAQ,Q,iCAU9C,GAA4B,MAAzBC,KAAKN,MAAMO,KAAKC,OACf,OACI,6BAAK,gE,+BAKb,OAAGF,KAAKN,MAAMO,KAAKE,WACR,kBAAC,IAAD,CAAUC,GAAG,eAIpB,yBAAKC,UAAU,QACf,qCACA,0BAAMA,UAAU,OAAOb,SAAUQ,KAAKN,MAAMY,aAAaN,KAAKR,WAC1D,kBAACe,EAAA,EAAD,CAAOC,KAAK,WAAWX,MAAM,WAAWC,KAAK,OAAOW,UAAWT,KAAKU,cACpE,kBAACH,EAAA,EAAD,CAAOC,KAAK,WAAWX,MAAM,WAAWC,KAAK,WAAWW,UAAWT,KAAKU,cACxE,4BAAQL,UAAU,eAAlB,UAEHL,KAAKW,gB,GAnCEC,IAAMC,WA6CXC,eAJS,SAAAC,GACpB,MAAO,CAACd,KAAMc,EAAMd,QAGe,CAACN,UD5Cf,SAAAF,GAAM,8CAAI,WAAMuB,GAAN,eAAAC,EAAA,+EAEJ9B,EAAS+B,KAAK,SAASzB,GAFnB,OAErB0B,EAFqB,OAG3BH,EAAS,CAAClB,KAAM,aAAcsB,QAAQ,EAAD,GAAMD,EAASE,KAAf,CAAqBnB,OAAOiB,EAASjB,WAH/C,gDAK7Bc,EAAS,CAAClB,KAAM,cAAesB,QAAS,CAAClB,OAAO,KAAIiB,SAASjB,UALhC,yDAAJ,wDC4ChBY,CAAqCQ,YAAU,CAC1DC,KAAM,SAD0CD,CAEjD/B,ICjDGiC,E,2MAUFhC,SAAW,SAACC,GACR,EAAKC,MAAM+B,WAAWhC,I,8EAVM,IAAnBG,EAAkB,EAAlBA,MAAMC,EAAY,EAAZA,MAAMC,EAAM,EAANA,KACrB,OACI,6BACI,+BAAQD,GACR,2CAAWD,EAAX,CAAkBE,KAAMA,EAAMC,UAAQ,Q,iCAU9C,GAA4B,MAAzBC,KAAKN,MAAMO,KAAKC,OACf,OACI,6BAAK,4E,+BAKb,OACI,yBAAKG,UAAU,QACf,uCACA,0BAAMA,UAAU,OAAOb,SAAUQ,KAAKN,MAAMY,aAAaN,KAAKR,WAC1D,kBAACe,EAAA,EAAD,CAAOC,KAAK,OAAOX,MAAM,OAAOC,KAAK,OAAOW,UAAWT,KAAKU,cAC5D,kBAACH,EAAA,EAAD,CAAOC,KAAK,QAAQX,MAAM,QAAQC,KAAK,QAAQW,UAAWT,KAAKU,cAC/D,kBAACH,EAAA,EAAD,CAAOC,KAAK,WAAWX,MAAM,WAAWC,KAAK,OAAOW,UAAWT,KAAKU,cACpE,kBAACH,EAAA,EAAD,CAAOC,KAAK,WAAWX,MAAM,WAAWC,KAAK,WAAWW,UAAWT,KAAKU,cACxE,4BAAQL,UAAU,eAAlB,WAEHL,KAAKW,gB,GAhCKC,IAAMC,WAyCdC,eAJS,SAAAC,GACpB,MAAO,CAACd,KAAMc,EAAMd,QAGe,CAACwB,WF9Cd,SAAAhC,GAAM,8CAAI,WAAMuB,GAAN,SAAAC,EAAA,+EAET9B,EAAS+B,KAAK,SAAUzB,GAFf,6DAI5BuB,EAAS,CAAClB,KAAM,iBAAkBsB,QAAS,CAAClB,OAAO,KAAIiB,SAASjB,UAJpC,wDAAJ,wDE8CjBY,CAAsCQ,YAAU,CAC3DC,KAAM,YAD2CD,CAElDE,IC9BYE,E,iLAXP,OACI,yBAAKrB,UAAU,kBAAkBsB,GAAG,mBAChC,yBAAKA,GAAG,kBACJ,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GAPDf,IAAMC,WCCnBe,E,2MAWFpC,SAAW,SAACC,GACR,EAAKC,MAAMmC,SAASpC,EAAO,EAAKC,MAAMO,KAAK6B,aAAa,EAAKpC,MAAMwB,KAAKS,K,8EATlD,IAAb/B,EAAY,EAAZA,MAAME,EAAM,EAANA,KACf,OACI,6BACI,2CAAWF,EAAX,CAAkBE,KAAMA,EAAMiC,UAAU,MAAMhC,UAAQ,Q,+BAW9D,OAAIC,KAAKN,MAAMO,KAAKE,YAAgBH,KAAKN,MAAMwB,KAAKc,WAAahC,KAAKN,MAAMO,KAAK+B,SAIjF,6BACKhC,KAAKN,MAAMwB,KAAKA,KACjB,6BACA,0BAAM1B,SAAUQ,KAAKN,MAAMY,aAAaN,KAAKR,WACzC,kBAACe,EAAA,EAAD,CAAOC,KAAK,OAAOV,KAAK,OAAOW,UAAWT,KAAKU,cAC/C,0CAGJ,kBAAC,IAAD,CAAMN,GAAE,cAAR,cAXO,kBAAC,IAAD,CAAUA,GAAG,U,GAlBTQ,IAAMC,WAyCdC,eALS,SAACC,EAAMkB,GAC3B,MAAO,CAAChC,KAAMc,EAAMd,KAAMiB,KAAMH,EAAMG,KAAKe,EAASC,MAAMC,OAAOR,OAI9B,CAACE,SJ4BhB,SAACpC,EAAO2C,EAAMT,GAAd,8CAAqB,WAAMX,GAAN,eAAAC,EAAA,+EAEd9B,EAASkD,IAAT,iBAAuBV,GAAKlC,EAAQ,CACvD6C,QAAS,CACTC,cAAc,UAAD,OAAYH,MAJQ,OAE/BjB,EAF+B,OAMrCH,EAAS,CAAClB,KAAM,YAAasB,QAASD,EAASE,OANV,gDAOvBmB,QAAQC,IAAI,KAAItB,UAPO,iEAArB,wDI5BTL,CAAoCQ,YAAU,CACzDC,KAAM,cADyCD,CAEhDM,I,QC3CGc,E,2MAIFC,KAAO,WACH,EAAKjD,MAAMkD,eAAe,EAAKlD,MAAMO,KAAK6B,aAAa,EAAKpC,MAAMwB,KAAK2B,OAAO,I,EAGlFC,QAAU,SAACnB,GACP,EAAKjC,MAAMqD,WAAW,EAAKrD,MAAMO,KAAK6B,aAAaH,I,EAGvDqB,iBAAmB,SAAC9B,GAChB,GAAIA,EAAKc,WAAa,EAAKtC,MAAMO,KAAK+B,UAAa,EAAKtC,MAAMO,KAAKgD,KAC/D,OACI,yBAAK5C,UAAU,2BACf,kBAAC,IAAD,CAAMD,GAAE,sBAAiBc,EAAKS,KAAM,yCACpC,4BAAQmB,QAAS,EAAKA,QAAQI,KAAb,eAAuBhC,EAAKS,KAA7C,Y,mFAfL3B,KAAKN,MAAMO,KAAKE,YAAYH,KAAKN,MAAMkD,eAAe5C,KAAKN,MAAMO,KAAK6B,aAAa,K,oCAoB3E,IAAD,OACV,OAAO9B,KAAKN,MAAMwB,KAAKiC,KAAI,SAAAjC,GACvB,OACI,yBAAKb,UAAU,OAAO+C,IAAKlC,EAAKS,IAC5B,yBAAKtB,UAAU,uBAAuBa,EAAKA,MAC3C,yBAAKb,UAAU,2BAA2Ba,EAAKc,UAC9C,EAAKgB,iBAAiB9B,S,+BAQnC,OACI,yBAAKb,UAAU,mBACX,4BAAQyC,QAAS9C,KAAK2C,MAAtB,QACC3C,KAAKqD,mB,GAvCGzC,IAAMC,WAkDhBC,eAJS,SAAAC,GACpB,MAAO,CAACd,KAAMc,EAAMd,KAAMiB,KAAMoC,OAAO7D,OAAOsB,EAAMG,SAGjB,CAACqC,WLtCd,SAACnB,GAAD,8CAAW,WAAMpB,GAAN,eAAAC,EAAA,+EAEN9B,EAASqE,IAAI,SAAS,CAC7ClB,QAAS,CACTC,cAAc,UAAD,OAAYH,MAJI,OAEvBjB,EAFuB,OAK7BH,EAAS,CAAClB,KAAM,cAAesB,QAASD,EAASE,OALpB,gDAOF,MAAxB,KAAIF,SAASjB,QACZc,EAAS,CAAClB,KAAM,aAAcsB,QAAS,CAACjB,YAAY,EAAO2B,aAAc,MARhD,yDAAX,uDKsCyBc,eLxBrB,SAACR,EAAMT,GAAP,8CAAc,WAAMX,GAAN,eAAAC,EAAA,+EAEb9B,EAASqE,IAAT,iBAAuB7B,GAAK,CACnDW,QAAS,CACTC,cAAc,UAAD,OAAYH,MAJW,OAE9BjB,EAF8B,OAKpCQ,IACAX,EAAS,CAAClB,KAAM,cAAesB,QAASD,EAASE,OANb,gDAQT,MAAxB,KAAIF,SAASjB,QACZc,EAAS,CAAClB,KAAM,aAAcsB,QAAS,CAACjB,YAAY,EAAO2B,aAAc,MATzC,yDAAd,uDKwBoCiB,WLSxC,SAACX,EAAMT,GAAP,8CAAc,WAAMX,GAAN,SAAAC,EAAA,+EAET9B,EAASsE,OAAT,iBAA0B9B,GAAM,CACnDW,QAAS,CACLC,cAAc,UAAD,OAAYH,MAJD,cAMhCpB,EAAS,CAAClB,KAAM,cAAesB,QAASO,IANR,gDAOnBa,QAAQC,IAAI,KAAItB,UAPG,yDAAd,wDKTXL,CAAgE4B,GChDzEgB,E,2MASFlE,SAAW,SAACC,GACR,EAAKC,MAAMiE,WAAWlE,EAAO,EAAKC,MAAMO,KAAK6B,e,8EARX,IAAzBlC,EAAwB,EAAxBA,MAAWgE,GAAa,EAAlB9D,KAAkB,EAAb8D,aACpB,OAEO,4CAAUvD,UAAU,cAAiBT,EAArC,CAA4CmC,UAAU,MAAM6B,YAAaA,EAAaC,KAAK,IAAI9D,UAAQ,O,+BAS9G,OACI,yBAAKM,UAAU,wBACf,0BAAMA,UAAU,OAAOb,SAAUQ,KAAKN,MAAMY,aAAaN,KAAKR,WAC1D,kBAACe,EAAA,EAAD,CAAOC,KAAK,OAAQV,KAAK,OAAO8D,YAAY,+BAA+BnD,UAAWT,KAAKU,cAC3F,8C,GAlBSE,IAAMC,WA8BhBC,eAJS,SAAAC,GACpB,MAAO,CAACd,KAAMc,EAAMd,QAGe,CAAC0D,WNQd,SAAClE,EAAO2C,GAAR,8CAAkB,WAAMpB,GAAN,eAAAC,EAAA,+EAEb9B,EAAS+B,KAAK,SAASzB,EAAQ,CAClD6C,QAAS,CACTC,cAAc,UAAD,OAAYH,MAJO,OAE9BjB,EAF8B,OAKhCH,EAAS,CAAClB,KAAM,cAAesB,QAASD,EAASE,OALjB,gDAM1BmB,QAAQC,IAAI,KAAItB,UANU,iEAAlB,wDMRXL,CAAsCQ,YAAU,CAC3DC,KAAM,QAD2CD,CAElDoC,ICjCGI,E,2MAGFtE,SAAW,WACP,EAAKE,MAAMqE,WAAW,EAAKrE,MAAMO,KAAK6B,e,wEAItC,OACI,yBAAKzB,UAAU,UACf,0BAAMb,SAAUQ,KAAKN,MAAMY,aAAaN,KAAKR,WACzC,gD,GAXKoB,IAAMC,WAuBZC,eAJS,SAAAC,GACpB,MAAO,CAACd,KAAMc,EAAMd,QAGe,CAAC8D,WPyBd,SAAC3B,GAAD,8CAAW,WAAMpB,GAAN,eAAAC,EAAA,+EAEN9B,EAASsE,OAAO,UAAW,CAC9CnB,QAAS,CACTC,cAAc,UAAD,OAAYH,MAJA,OAEvBjB,EAFuB,OAM7BH,EAAS,CAAClB,KAAM,cAAesB,QAASD,EAASE,OANpB,gDAOnBmB,QAAQC,IAAI,KAAItB,UAPG,iEAAX,wDOzBXL,CAAsCQ,YAAU,CAC3DC,KAAM,UAD2CD,CAElDwC,ICvBGE,E,iLAGE,OAAIhE,KAAKN,MAAMO,KAAKE,WAIhB,yBAAKE,UAAU,SACf,kBAAC,EAAD,MACA,wBAAIA,UAAU,kBAAd,aACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAPO,kBAAC,IAAD,CAAUD,GAAG,U,GAJRQ,IAAMC,WAqBfC,eAJS,SAAAC,GACpB,MAAO,CAACd,KAAMc,EAAMd,QAGTa,CAAyBkD,GCNzBC,E,iLAdP,OACA,yBAAK5D,UAAU,cACX,kBAAC,IAAD,KACI,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAO6D,KAAK,IAAIC,OAAK,EAAC1D,UAAWiB,IACjC,kBAAC,IAAD,CAAOwC,KAAK,aAAaC,OAAK,EAAC1D,UAAWuD,IAC1C,kBAAC,IAAD,CAAOE,KAAK,kBAAkBC,OAAK,EAAC1D,UAAWmB,W,GATjDhB,IAAMC,W,klBCNT,I,0lBCEA,ICCAuD,cAAgB,CAC3B7C,KAAM8C,IACNpE,KFLW,WAAiC,IAAhCc,EAA+B,uDAAzB,CAACb,OAAO,KAAMoE,EAAW,uCAC3C,OAAOA,EAAOxE,MACV,IAAK,aAEL,IAAK,cAEL,IAAK,cAEL,IAAK,iBAEL,IAAK,aACD,OAAO,KAAIiB,EAAX,GAAqBuD,EAAOlD,SAChC,QACI,OAAOL,IEPfG,KDJW,WAAuB,IAAtBH,EAAqB,uDAAf,GAAIuD,EAAW,uCACjC,OAAOA,EAAOxE,MACV,IAAK,cAEL,IAAK,cACD,OAAO,KAAIiB,EAAX,GAAoBwD,IAAEC,QAAQF,EAAOlD,QAAS,OAClD,IAAK,cACD,OAAOmD,IAAEE,KAAK1D,EAAMuD,EAAOlD,SAC/B,IAAK,YACD,OAAO,KAAIL,EAAX,GAAoBwD,IAAEC,QAAQF,EAAOlD,QAAS,OAClD,QACI,OAAOL,MENb2D,EAgBN,WACE,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,OAAqB,OAAlBF,OAAwB,EACpBG,KAAKC,MAAMJ,GAnBGK,GAEjBC,EAAMC,YAAYC,EAAST,EAAeU,YAAgBC,MAEhEC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,cAAc,UAczBR,EAAMS,WAAU,kBAXhB,SAA4B3E,GAC1B,IAAM4D,EAAkBG,KAAKa,UAAU5E,GACvC6D,aAAagB,QAAQ,QAASjB,GASVkB,CAAmBZ,EAAMa,gB","file":"static/js/main.53f2bb04.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst flaskAPI = axios.create({\r\n    baseURL:'https://social-network-akram.herokuapp.com',\r\n});\r\n\r\nexport default flaskAPI;","import flaskAPI from '../api/flaskapi';\r\n\r\nexport const createUser = values => async dispatch => {\r\n    try {\r\n    const response = await flaskAPI.post('/users', values);\r\n    } catch(err) {\r\n        dispatch({type: 'REGISTER_ERROR', payload: {status:err.response.status}})\r\n    }  \r\n}\r\n\r\nexport const loginUser = values => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.post('/login',values);\r\n        dispatch({type: 'LOGIN_USER', payload: {...response.data, status:response.status}});\r\n    } catch(err) {\r\n      dispatch({type: 'LOGIN_ERROR', payload: {status:err.response.status}})\r\n    }\r\n}\r\n\r\nexport const fetchPosts = (token) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.get('/posts',{\r\n        headers: {\r\n        Authorization: `Bearer ${token}`}});\r\n        dispatch({type: 'FETCH_POSTS', payload: response.data});\r\n    } catch(err) {\r\n        if(err.response.status === 401){\r\n            dispatch({type: 'AUTH_ERROR', payload: {isLoggedIn: false, access_token: \"\"}})\r\n        }\r\n      }\r\n}\r\n\r\n\r\nexport const fetchSomePosts = (token,id) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.get(`/posts/${id}`,{\r\n        headers: {\r\n        Authorization: `Bearer ${token}`}});\r\n        id++;\r\n        dispatch({type: 'FETCH_POSTS', payload: response.data});\r\n    } catch(err) {\r\n        if(err.response.status === 401){\r\n            dispatch({type: 'AUTH_ERROR', payload: {isLoggedIn: false, access_token: \"\"}})\r\n        }\r\n      }\r\n}\r\n\r\nexport const createPost = (values,token) => async dispatch => {\r\n    try{\r\n        const response = await flaskAPI.post('/posts',values, {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`}});\r\n            dispatch({type: 'CREATE_POST', payload: response.data});\r\n    } catch(err){ console.log(err.response)};\r\n}\r\n\r\nexport const logoutUser = (token) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.delete('/logout', {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }});\r\n        dispatch({type: 'LOGOUT_USER', payload: response.data});\r\n    } catch(err){ console.log(err.response)};\r\n};\r\n\r\nexport const deletePost = (token,id) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.delete(`/posts/${id}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }})\r\n        dispatch({type: 'DELETE_POST', payload: id});\r\n        } catch(err){console.log(err.response)}\r\n};\r\n\r\nexport const editPost = (values,token,id) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.put(`/posts/${id}`,values, {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }})\r\n        dispatch({type: 'EDIT_POST', payload: response.data});\r\n        } catch(err) {console.log(err.response)};\r\n};\r\n","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {loginUser} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    renderInput({input,label,type}){\r\n        return (\r\n            <div>\r\n                <label>{label}</label>\r\n                <input {...input} type={type} required/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.loginUser(values)\r\n    }\r\n\r\n    errormsg() {\r\n        if(this.props.user.status===422) {\r\n            return(\r\n                <div><p>Username/Password is incorrect</p></div>\r\n         );\r\n    }}\r\n\r\n    render(){\r\n        if(this.props.user.isLoggedIn) {\r\n            return <Redirect to='/dashboard' />\r\n        }\r\n       \r\n        return (\r\n            <div className=\"test\">\r\n            <h3>Login</h3>\r\n            <form className=\"test\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"username\" label=\"Username\" type=\"text\" component={this.renderInput}/>\r\n                <Field name=\"password\" label=\"Password\" type=\"password\" component={this.renderInput}/>\r\n                <button className=\"main_button\">Login</button>\r\n            </form>\r\n            {this.errormsg()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {user: state.user}\r\n};\r\n\r\nexport default connect(mapStateToProps,{loginUser})(reduxForm({\r\n    form: 'login'\r\n})(Login));","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {createUser} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\nclass Register extends React.Component {\r\n    renderInput({input,label,type}){\r\n        return (\r\n            <div>\r\n                <label>{label}</label>\r\n                <input {...input} type={type} required/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.createUser(values);\r\n    }\r\n\r\n    errormsg() {\r\n        if(this.props.user.status===409) {\r\n            return(\r\n                <div><p>This email/username exists in our database</p></div>\r\n         )}\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"test\">\r\n            <h3>Sign Up</h3>\r\n            <form className=\"test\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"name\" label=\"Name\" type=\"text\" component={this.renderInput}/>\r\n                <Field name=\"email\" label=\"Email\" type=\"email\" component={this.renderInput}/>\r\n                <Field name=\"username\" label=\"Username\" type=\"text\" component={this.renderInput}/>\r\n                <Field name=\"password\" label=\"Password\" type=\"password\" component={this.renderInput}/>\r\n                <button className=\"main_button\">Submit</button>\r\n            </form>\r\n            {this.errormsg()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {user: state.user}\r\n};\r\n\r\nexport default connect(mapStateToProps,{createUser})(reduxForm({\r\n    form: 'register'\r\n})(Register));","import React from 'react';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport '../style.css';\r\n\r\n\r\nclass Main extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"test cover_page\" id=\"main_background\">\r\n                <div id=\"main_container\">\r\n                    <Login/>\r\n                    <Register/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect,Link} from 'react-router-dom';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {editPost} from '../actions';\r\n\r\n\r\nclass PostEdit extends React.Component {\r\n\r\n\r\n    renderInput({input,type}){\r\n        return (\r\n            <div>\r\n                <input {...input} type={type} maxLength=\"150\" required/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.editPost(values,this.props.user.access_token,this.props.post.id)\r\n    }\r\n\r\n\r\n    render(){\r\n        if(!this.props.user.isLoggedIn || !(this.props.post.username === this.props.user.username)){\r\n            return <Redirect to='/'/>\r\n        }\r\n        return (\r\n        <div>\r\n            {this.props.post.post}\r\n            <div>\r\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"post\" type=\"text\" component={this.renderInput}/>\r\n                <button>Edit</button>\r\n            </form>\r\n            </div>\r\n            <Link to={`/dashboard`}>Dashboard</Link>\r\n        </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n    return {user: state.user, post: state.post[ownProps.match.params.id]};\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,{editPost})(reduxForm({\r\n    form: 'editedForm'\r\n})(PostEdit));","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {fetchPosts, fetchSomePosts, deletePost} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\nclass PostsLists extends React.Component {\r\n    componentDidMount() {\r\n        if(this.props.user.isLoggedIn) this.props.fetchSomePosts(this.props.user.access_token,6);\r\n    }\r\n    more = () => {\r\n        this.props.fetchSomePosts(this.props.user.access_token,this.props.post.length+1);\r\n    }\r\n\r\n    onClick = (id) => {\r\n        this.props.deletePost(this.props.user.access_token,id);\r\n        }\r\n\r\n    renderDeleteEdit = (post) => {\r\n        if((post.username === this.props.user.username) || this.props.user.role) {\r\n            return (\r\n                <div className=\"post-buttons-containter\">\r\n                <Link to={`/posts/edit/${post.id}`}><button>Edit</button></Link>\r\n                <button onClick={this.onClick.bind(this,post.id)}>Delete</button>\r\n                </div>\r\n            )};\r\n    } \r\n\r\n    renderPosts() {\r\n        return this.props.post.map(post => {\r\n            return (\r\n                <div className=\"post\" key={post.id}>\r\n                    <div className=\"post-text-container\">{post.post}</div>\r\n                    <div className=\"post-username-container\">{post.username}</div>\r\n                    {this.renderDeleteEdit(post)}\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"posts_container\">\r\n                <button onClick={this.more}>More</button>\r\n                {this.renderPosts()}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user, post: Object.values(state.post)};\r\n};\r\n\r\nexport default connect(mapStateToProps,{fetchPosts,fetchSomePosts,deletePost})(PostsLists);","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {createPost} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\n\r\n\r\nclass CreatePost extends React.Component {\r\n\r\n    renderInput({input,type,placeholder}){\r\n        return (\r\n               // <input className=\"input-post\" {...input} type={type} placeholder={placeholder} maxLength=\"150\" required/>\r\n               <textarea className=\"input-post\" {...input} maxLength=\"150\" placeholder={placeholder} rows=\"3\" required></textarea>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.createPost(values,this.props.user.access_token)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"input-post-container\">\r\n            <form className=\"test\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"post\"  type=\"text\" placeholder=\"What are you thinking about?\" component={this.renderInput}/>\r\n                <button>Post</button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user};\r\n};\r\n\r\nexport default connect(mapStateToProps,{createPost})(reduxForm({\r\n    form: 'post'\r\n})(CreatePost));","import React from 'react';\r\nimport {reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {logoutUser} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass Logout extends React.Component {\r\n\r\n\r\n    onSubmit = () => {\r\n        this.props.logoutUser(this.props.user.access_token)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"logout\">\r\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <button>Logout</button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user};\r\n};\r\n\r\nexport default connect(mapStateToProps,{logoutUser})(reduxForm({\r\n    form: 'logout'\r\n})(Logout));","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport PostsLists from './PostsLists';\r\nimport CreatePost from './CreatePost';\r\nimport Logout from './Logout';\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    render(){\r\n        if(!this.props.user.isLoggedIn) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div className=\"test1\">\r\n            <Logout/>\r\n            <h3 className=\"flex-component\">Dashboard</h3>\r\n            <CreatePost/>\r\n            <PostsLists/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport Main from './Main';\r\nimport PostEdit from './PostEdit';\r\nimport Dashboard from './Dashboard';\r\nimport '../style.css';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n        <div className=\"cover_page\">\r\n            <BrowserRouter>\r\n                <div className=\"cover_page\">\r\n                    <Route path=\"/\" exact component={Main}/>\r\n                    <Route path=\"/dashboard\" exact component={Dashboard}/>\r\n                    <Route path=\"/posts/edit/:id\" exact component={PostEdit}/>\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App","import {loginUser,logoutUser,fetchPosts} from '../actions';\r\n\r\nexport default (state={status:200}, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_USER':\r\n            return {...state, ...action.payload}\r\n        case 'LOGOUT_USER':\r\n            return {...state, ...action.payload}\r\n        case 'LOGIN_ERROR':\r\n            return {...state, ...action.payload}\r\n        case 'REGISTER_ERROR':\r\n            return {...state, ...action.payload}\r\n        case 'AUTH_ERROR':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n};","import _ from 'lodash';\r\nimport {fetchPosts,createPost,deletePost,editPost} from '../actions';\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POSTS':\r\n            return {...state,..._.mapKeys(action.payload, 'id')};\r\n        case 'CREATE_POST':\r\n            return {...state,..._.mapKeys(action.payload, 'id')};\r\n        case 'DELETE_POST':\r\n            return _.omit(state,action.payload);    \r\n        case 'EDIT_POST':\r\n            return {...state,..._.mapKeys(action.payload, 'id')};\r\n        default:\r\n            return state;\r\n    }\r\n};","import {combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport userReducer from './userReducer';\r\nimport postsReducer from './postReducer';\r\n\r\nexport default combineReducers({\r\n    form: formReducer,\r\n    user: userReducer,\r\n    post: postsReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore,applyMiddleware} from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst presistedState = loadFromLocalStorage();\r\n\r\nconst store=createStore(reducers,presistedState,applyMiddleware(reduxThunk));\r\n\r\nReactDom.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>, \r\n  document.querySelector('#root')\r\n);\r\n\r\nfunction saveToLocalStorage(state) {\r\n  const serializedState = JSON.stringify(state);\r\n  localStorage.setItem('state', serializedState);\r\n}\r\n\r\nfunction loadFromLocalStorage(){\r\n  const serializedState = localStorage.getItem('state');\r\n  if(serializedState===null) return undefined;\r\n  return JSON.parse(serializedState)\r\n}\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));"],"sourceRoot":""}