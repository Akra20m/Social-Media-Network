{"version":3,"sources":["api/flaskapi.js","actions/index.js","components/Login.js","components/Register.js","components/Main.js","components/PostEdit.js","components/Comment.js","components/PostsLists.js","components/CreatePost.js","components/Logout.js","components/Header.js","components/Dashboard.js","components/Personal.js","components/Profile.js","components/App.js","reducers/userReducer.js","reducers/commentReducer.js","reducers/index.js","reducers/postReducer.js","reducers/userPostsReducer.js","index.js"],"names":["flaskAPI","axios","create","baseURL","deletePost","token","id","dispatch","a","delete","headers","Authorization","type","payload","console","log","response","Login","onSubmit","values","props","loginUser","input","label","className","required","this","user","status","isLoggedIn","to","handleSubmit","Field","name","component","renderInput","errormsg","React","Component","connect","state","post","data","reduxForm","form","Register","createUser","msg","Main","PostEdit","editPost","access_token","maxLength","placeholder","rows","username","ReactDOM","createPortal","style","position","onClick","editClose","document","querySelector","ownProps","userPost","put","Comment","newValues","createComment","change","renderComments","comment","map","key","ReactEmoji","emojify","date","substr","fetchComments","obj","get","PostsLists","show","more","fetchSomePosts","length","deleteOnClick","editOpen","setState","displayComment","renderDeleteEdit","role","bind","Aria-label","renderPosts","noMoreAll","checkMore","renderEdit","Object","fetchPosts","CreatePost","createPost","Logout","logoutUser","window","localStorage","clear","Dashboard","backgroundColor","Personal","src","alt","email","Profile","fetchUserPosts","noMoreUser","App","path","exact","combineReducers","formReducer","action","_","mapKeys","omit","presistedState","serializedState","sessionStorage","getItem","JSON","parse","loadFromSessionStorage","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDom","render","subscribe","stringify","setItem","saveToSessionStorage","getState"],"mappings":"kVAQeA,E,OALEC,EAAMC,OAAO,CAC3BC,QAAQ,+C,ykBCFJ,IAiFMC,EAAa,SAACC,EAAMC,GAAP,8CAAc,WAAMC,GAAN,SAAAC,EAAA,+EAETR,EAASS,OAAT,iBAA0BH,GAAM,CACnDI,QAAS,CACLC,cAAc,UAAD,OAAYN,MAJD,cAMhCE,EAAS,CAACK,KAAM,cAAeC,QAASP,IANR,gDAOnBQ,QAAQC,IAAI,KAAIC,UAPG,yDAAd,uDC1EpBC,G,iNAWFC,SAAW,SAACC,GACR,EAAKC,MAAMC,UAAUF,I,8EAVO,IAAnBG,EAAkB,EAAlBA,MAAMC,EAAY,EAAZA,MAAMX,EAAM,EAANA,KACrB,OACI,6BACI,+BAAQW,GACR,2CAAWD,EAAX,CAAkBV,KAAMA,EAAMY,UAAU,WAAWC,UAAQ,Q,iCAUnE,GAA4B,MAAzBC,KAAKN,MAAMO,KAAKC,OACf,OACI,6BAAK,gE,+BAKb,OAAGF,KAAKN,MAAMO,KAAKE,WACR,kBAAC,IAAD,CAAUC,GAAG,eAIpB,yBAAKN,UAAU,QACf,qCACA,0BAAMA,UAAU,OAAON,SAAUQ,KAAKN,MAAMW,aAAaL,KAAKR,WAC1D,kBAACc,EAAA,EAAD,CAAOC,KAAK,WAAWV,MAAM,WAAWX,KAAK,OAAOsB,UAAWR,KAAKS,cACpE,kBAACH,EAAA,EAAD,CAAOC,KAAK,WAAWV,MAAM,WAAWX,KAAK,WAAWsB,UAAWR,KAAKS,cACxE,4BAAQX,UAAU,eAAlB,UAEHE,KAAKU,gB,GAnCEC,IAAMC,YA6CXC,eAJS,SAAAC,GACpB,MAAO,CAACb,KAAMa,EAAMb,QAGe,CAACN,UD3Cf,SAAAF,GAAM,8CAAI,WAAMZ,GAAN,eAAAC,EAAA,+EAEJR,EAASyC,KAAK,SAAStB,GAFnB,OAErBH,EAFqB,OAG3BT,EAAS,CAACK,KAAM,aAAcC,QAAQ,EAAD,GAAMG,EAAS0B,KAAf,CAAqBd,OAAOZ,EAASY,WAH/C,gDAK7BrB,EAAS,CAACK,KAAM,cAAeC,QAAS,CAACe,OAAO,KAAIZ,SAASY,UALhC,yDAAJ,wDC2ChBW,CAAqCI,YAAU,CAC1DC,KAAM,SAD0CD,CAEjD1B,ICjDG4B,E,2MAUF3B,SAAW,SAACC,GACR,EAAKC,MAAM0B,WAAW3B,I,8EAVM,IAAnBG,EAAkB,EAAlBA,MAAMC,EAAY,EAAZA,MAAMX,EAAM,EAANA,KACrB,OACI,6BACI,+BAAQW,GACR,2CAAWD,EAAX,CAAkBV,KAAMA,EAAMa,UAAQ,Q,4BAU9C,OAA4B,MAAzBC,KAAKN,MAAMO,KAAKC,OAEX,6BAAK,0EAEoB,MAAzBF,KAAKN,MAAMO,KAAKC,OAEhB,6BAAK,sDAFR,I,+BAOL,OACI,yBAAKJ,UAAU,QACf,uCACA,0BAAMA,UAAU,OAAON,SAAUQ,KAAKN,MAAMW,aAAaL,KAAKR,WAC1D,kBAACc,EAAA,EAAD,CAAOC,KAAK,OAAOV,MAAM,OAAOX,KAAK,OAAOsB,UAAWR,KAAKS,cAC5D,kBAACH,EAAA,EAAD,CAAOC,KAAK,QAAQV,MAAM,QAAQX,KAAK,QAAQsB,UAAWR,KAAKS,cAC/D,kBAACH,EAAA,EAAD,CAAOC,KAAK,WAAWV,MAAM,WAAWX,KAAK,OAAOsB,UAAWR,KAAKS,cACpE,kBAACH,EAAA,EAAD,CAAOC,KAAK,WAAWV,MAAM,WAAWX,KAAK,WAAWsB,UAAWR,KAAKS,cACxE,4BAAQX,UAAU,eAAlB,WAEHE,KAAKqB,W,GApCKV,IAAMC,WA6CdC,eAJS,SAAAC,GACpB,MAAO,CAACb,KAAMa,EAAMb,QAGe,CAACmB,WFlDd,SAAA3B,GAAM,8CAAI,WAAMZ,GAAN,eAAAC,EAAA,+EAETR,EAASyC,KAAK,SAAUtB,GAFf,OAE1BH,EAF0B,OAGhCT,EAAS,CAACK,KAAM,gBAAiBC,QAAS,CAACe,OAAOZ,EAASY,UAH3B,gDAK5BrB,EAAS,CAACK,KAAM,iBAAkBC,QAAS,CAACe,OAAO,KAAIZ,SAASY,UALpC,yDAAJ,wDEkDjBW,CAAsCI,YAAU,CAC3DC,KAAM,YAD2CD,CAElDE,IClCYG,E,iLAXP,OACI,yBAAKxB,UAAU,kBAAkBlB,GAAG,mBAChC,yBAAKA,GAAG,kBACJ,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GAPD+B,IAAMC,WCGnBW,E,2MAYF/B,SAAW,SAACC,GACR,EAAKC,MAAM8B,SAAS/B,EAAO,EAAKC,MAAMO,KAAKwB,aAAa,EAAK/B,MAAMqB,KAAKnC,GAAG,EAAKc,MAAMR,O,8EAXrE,IAARU,EAAO,EAAPA,MACT,OACI,6BAEI,4CAAUE,UAAU,cAAiBF,EAArC,CAA4C8B,UAAU,MAAMC,YAAa,YAAaC,KAAK,IAAI7B,UAAQ,Q,+BAW/G,OAAIC,KAAKN,MAAMO,KAAKE,YAAgBH,KAAKN,MAAMqB,KAAKc,WAAa7B,KAAKN,MAAMO,KAAK4B,SAG1EC,IAASC,aAChB,yBAAKjC,UAAU,kCAAkCkC,MAAO,CAACC,SAAS,UAC9D,yBAAKnC,UAAU,oCACf,yBAAKA,UAAU,UACVE,KAAKN,MAAMqB,KAAKA,MAErB,yBAAKjB,UAAU,WACf,0BAAMN,SAAUQ,KAAKN,MAAMW,aAAaL,KAAKR,UAAWZ,GAAG,YACvD,kBAAC0B,EAAA,EAAD,CAAOC,KAAK,OAAOC,UAAWR,KAAKS,gBAGvC,yBAAKX,UAAU,WACX,yBAAKA,UAAU,cACf,4BAAQA,UAAU,qBAAqBoB,KAAK,YAA5C,QACA,yBAAKpB,UAAU,OACf,4BAAQA,UAAU,YAAYoC,QAASlC,KAAKN,MAAMyC,WAAlD,aAKRC,SAASC,cAAc,WAtBZ,kBAAC,IAAD,CAAUjC,GAAG,U,GAlBTO,IAAMC,WAkDdC,eALS,SAACC,EAAMwB,GAC5B,OAAmB,IAAhBA,EAASpD,KAAiB,CAACe,KAAMa,EAAMb,KAAMc,KAAMD,EAAMC,KAAKuB,EAAS1D,KAClD,IAAhB0D,EAASpD,KAAiB,CAACe,KAAMa,EAAMb,KAAMc,KAAMD,EAAMyB,SAASD,EAAS1D,UAA9E,IAG+B,CAAC4C,SJkChB,SAAC/B,EAAOd,EAAMC,EAAGM,GAAjB,8CAA0B,WAAML,GAAN,eAAAC,EAAA,+EAEnBR,EAASkE,IAAT,iBAAuB5D,GAAKa,EAAQ,CACvDT,QAAS,CACTC,cAAc,UAAD,OAAYN,MAJa,OAEpCW,EAFoC,OAMhC,IAAPJ,EAAUL,EAAS,CAACK,KAAM,YAAaC,QAASG,EAAS0B,OAC7C,IAAP9B,GAASL,EAAS,CAACK,KAAM,iBAAkBC,QAASG,EAAS0B,OAP3B,gDAQ5B5B,QAAQC,IAAI,KAAIC,UARY,iEAA1B,wDIlCTuB,CAAoCI,YAAU,CACzDC,KAAM,cADyCD,CAEhDM,I,yBCnDGkB,E,2MAQFjD,SAAW,SAACC,GACR,IAAIiD,EAAY,CACZ,QAAWjD,EAAO,UAAD,OAAW,EAAKC,MAAMd,MAE3C,EAAKc,MAAMiD,cAAc,EAAKjD,MAAMd,GAAG8D,EAAU,EAAKhD,MAAMO,KAAKwB,cACjE,EAAK/B,MAAMkD,OAAX,iBAA4B,EAAKlD,MAAMd,IAAK,O,EAKhDiE,eAAiB,SAACjE,GACd,GAAG,EAAKc,MAAMoD,QAAX,UAAsBlE,IACrB,OAAO,EAAKc,MAAMoD,QAAX,UAAsBlE,IAAMmE,KAAI,SAAAD,GACnC,OACI,yBAAKhD,UAAU,UAAUkD,IAAKF,EAAQlE,IAClC,yBAAKkB,UAAU,uBAAuBmD,IAAWC,QAAQJ,EAAQA,UACjE,yBAAKhD,UAAU,2BAA2BgD,EAAQjB,UAClD,yBAAK/B,UAAU,uBAAuBgD,EAAQK,KAAKC,OAAO,EAAE,U,8EAvB/C,IAApBxD,EAAmB,EAAnBA,MAAM+B,EAAa,EAAbA,YACf,OACO,4CAAU7B,UAAU,iBAAoBF,EAAxC,CAA+C8B,UAAU,MAAMC,YAAaA,EAAaC,KAAK,IAAI7B,UAAQ,O,0CAYjHC,KAAKN,MAAM2D,cAAcrD,KAAKN,MAAMd,GAAGoB,KAAKN,MAAMO,KAAKwB,gB,+BAgBvD,OACI,yBAAK3B,UAAU,2BACdE,KAAK6C,eAAe7C,KAAKN,MAAMd,IAChC,0BAAMkB,UAAU,eAAeN,SAAUQ,KAAKN,MAAMW,aAAaL,KAAKR,WAClE,kBAACc,EAAA,EAAD,CAAOC,KAAI,iBAAYP,KAAKN,MAAMd,IAAOM,KAAK,OAAOyC,YAAY,kBAAkBnB,UAAWR,KAAKS,cACnG,4BAAQX,UAAU,eAAlB,iB,GArCMa,IAAMC,WAkDbC,eAJS,SAAAC,GACpB,MAAO,CAACb,KAAMa,EAAMb,KAAM6C,QAAShC,EAAMgC,WAGN,CAACH,cL4CX,SAAC/D,EAAGa,EAAOd,GAAX,8CAAqB,WAAME,GAAN,iBAAAC,EAAA,+EAGnBR,EAASyC,KAAT,oBAA2BnC,GAAKa,EAAQ,CAC3DT,QAAS,CACTC,cAAc,UAAD,OAAYN,MALa,OAGpCW,EAHoC,OAMlCgE,EANkC,eAM5B1E,EAAIU,EAAS0B,MACvBnC,EAAS,CAACK,KAAM,iBAAkBC,QAASmE,IAPL,gDAQhClE,QAAQC,IAAI,KAAIC,UARgB,iEAArB,uDK5CyB+D,cLuDzB,SAACzE,EAAGD,GAAJ,8CAAc,WAAME,GAAN,iBAAAC,EAAA,+EAEZR,EAASiF,IAAT,oBAA0B3E,GAAM,CACnDI,QAAS,CACTC,cAAc,UAAD,OAAYN,MAJM,OAE7BW,EAF6B,OAK3BgE,EAL2B,eAKrB1E,EAAIU,EAAS0B,MACvBnC,EAAS,CAACK,KAAM,iBAAkBC,QAASmE,IANZ,gDAOzBlE,QAAQC,IAAI,KAAIC,UAPS,iEAAd,wDKvDduB,CAAuDI,YAAU,CAC5EC,KAAM,WAD4DD,CAEnEwB,ICpDGe,E,2MACF1C,MAAQ,CACJlC,GAAI,KACJ6E,MAAM,G,EAKVC,KAAO,WACH,EAAKhE,MAAMiE,eAAe,EAAKjE,MAAMO,KAAKwB,aAAa,EAAK/B,MAAMqB,KAAK6C,OAAO,I,EAGlFC,cAAgB,SAACjF,GACb,EAAKc,MAAMhB,WAAW,EAAKgB,MAAMO,KAAKwB,aAAa7C,I,EAEvDkF,SAAW,SAAClF,GACR,EAAKmF,SAAS,CAACnF,GAAGA,EAAI6E,MAAK,K,EAE/BtB,UAAY,WACR,EAAK4B,SAAS,CAACN,MAAK,K,EAExBO,eAAiB,SAACpF,GACd,OACI,kBAAC,EAAD,CAASA,GAAKA,K,EAGtBqF,iBAAmB,SAAClD,GAChB,GAAIA,EAAKc,WAAa,EAAKnC,MAAMO,KAAK4B,UAAa,EAAKnC,MAAMO,KAAKiE,KAC/D,OACI,yBAAKpE,UAAU,2BACf,uBAAGA,UAAU,8BAA8BoC,QAAS,EAAK4B,SAASK,KAAd,eAAwBpD,EAAKnC,IAAKwF,aAAW,uBACjG,uBAAGtE,UAAU,iCAAiCoC,QAAS,EAAK2B,cAAcM,KAAnB,eAA6BpD,EAAKnC,IAAKwF,aAAW,2B,EAQrHC,YAAc,WACV,OAAO,EAAK3E,MAAMqB,KAAKgC,KAAI,SAAAhC,GACvB,OACI,yBAAKjB,UAAU,OAAOkD,IAAKjC,EAAKnC,IAC5B,yBAAKkB,UAAU,uBAAuBmD,IAAWC,QAAQnC,EAAKA,OAE9D,yBAAKjB,UAAU,2BAA2BiB,EAAKc,UAC/C,yBAAK/B,UAAU,uBAAuBiB,EAAKoC,KAAKC,OAAO,EAAE,KACxD,EAAKa,iBAAiBlD,GACtB,EAAKiD,eAAejD,EAAKnC,S,mFA1CnCoB,KAAKN,MAAMO,KAAKE,YAAYH,KAAKN,MAAMiE,eAAe3D,KAAKN,MAAMO,KAAKwB,aAAa,K,kCAgDtF,IAAIzB,KAAKN,MAAMO,KAAKqE,UAAW,OAAO,4BAAQpC,QAASlC,KAAK0D,MAAtB,U,mCAGtC,GAAG1D,KAAKc,MAAM2C,KACX,OAAO,kBAAC,EAAD,CAAU7E,GAAIoB,KAAKc,MAAMlC,GAAI6E,KAAMzD,KAAKc,MAAM2C,KAAMtB,UAAWnC,KAAKmC,UAAWjD,KAAM,M,+BAK/F,OAAGc,KAAKN,MAAMqB,KAAK6C,OAEX,yBAAK9D,UAAU,mBACVE,KAAKuE,YACLvE,KAAKqE,cACLrE,KAAKwE,cAKX,S,GAzEU7D,IAAMC,WAiFhBC,eAJS,SAAAC,GACpB,MAAO,CAACb,KAAMa,EAAMb,KAAMc,KAAM0D,OAAOhF,OAAOqB,EAAMC,SAGjB,CAAC2D,WNvEd,SAAC/F,GAAD,8CAAW,WAAME,GAAN,eAAAC,EAAA,+EAENR,EAASiF,IAAI,SAAS,CAC7CvE,QAAS,CACTC,cAAc,UAAD,OAAYN,MAJI,OAEvBW,EAFuB,OAK7BT,EAAS,CAACK,KAAM,cAAeC,QAASG,EAAS0B,OALpB,gDAOF,MAAxB,KAAI1B,SAASY,QACZrB,EAAS,CAACK,KAAM,aAAcC,QAAS,CAACgB,YAAY,EAAOsB,aAAc,MARhD,yDAAX,uDMuEyBkC,eNzDrB,SAAChF,EAAMC,GAAP,8CAAc,WAAMC,GAAN,eAAAC,EAAA,+EAEbR,EAASiF,IAAT,iBAAuB3E,GAAK,CACnDI,QAAS,CACTC,cAAc,UAAD,OAAYN,MAJW,OAE9BW,EAF8B,OAKpCT,EAAS,CAACK,KAAM,cAAeC,QAASG,EAAS0B,KAAK,KACtDnC,EAAS,CAACK,KAAM,UAAWC,QAASG,EAAS0B,KAAK,KANd,gDAST,MAAxB,KAAI1B,SAASY,QACZrB,EAAS,CAACK,KAAM,aAAcC,QAAS,CAACgB,YAAY,EAAOsB,aAAc,MAVzC,yDAAd,uDMyDoC/C,cAAnDmC,CAAgE2C,GCnFzEmB,E,2MAQFnF,SAAW,SAACC,GACR,EAAKC,MAAMkF,WAAWnF,EAAO,EAAKC,MAAMO,KAAKwB,cAC7C,EAAK/B,MAAMkD,OAAO,OAAO,O,8EARI,IAApBhD,EAAmB,EAAnBA,MAAM+B,EAAa,EAAbA,YACf,OACO,4CAAU7B,UAAU,cAAiBF,EAArC,CAA4C8B,UAAU,MAAMC,YAAaA,EAAaC,KAAK,IAAI7B,UAAQ,O,+BAU9G,OACI,yBAAKD,UAAU,wBACf,0BAAMA,UAAU,OAAON,SAAUQ,KAAKN,MAAMW,aAAaL,KAAKR,WAC1D,kBAACc,EAAA,EAAD,CAAOC,KAAK,OAAQrB,KAAK,OAAOyC,YAAY,+BAA+BnB,UAAWR,KAAKS,cAC3F,4BAAQX,UAAU,eAAlB,c,GAlBSa,IAAMC,WA8BhBC,eAJS,SAAAC,GACpB,MAAO,CAACb,KAAMa,EAAMb,QAGe,CAAC2E,WP0Bd,SAACnF,EAAOd,GAAR,8CAAkB,WAAME,GAAN,eAAAC,EAAA,+EAEbR,EAASyC,KAAK,SAAStB,EAAQ,CAClDT,QAAS,CACTC,cAAc,UAAD,OAAYN,MAJO,OAE9BW,EAF8B,OAKhCT,EAAS,CAACK,KAAM,cAAeC,QAASG,EAAS0B,OALjB,gDAM1B5B,QAAQC,IAAI,KAAIC,UANU,iEAAlB,wDO1BXuB,CAAsCI,YAAU,CAC3DC,KAAM,QAD2CD,CAElD0D,IChCGE,E,2MAGFrF,SAAW,WACP,EAAKE,MAAMoF,WAAW,EAAKpF,MAAMO,KAAKwB,cACtCsD,OAAOC,aAAaC,S,wEAIpB,OACI,6BACA,0BAAMzF,SAAUQ,KAAKN,MAAMW,aAAaL,KAAKR,WACzC,4BAAQM,UAAU,UAAlB,gB,GAZKa,IAAMC,WAwBZC,eAJS,SAAAC,GACpB,MAAO,CAACb,KAAMa,EAAMb,QAGe,CAAC6E,WRyCd,SAACnG,GAAD,8CAAW,WAAME,GAAN,eAAAC,EAAA,+EAENR,EAASS,OAAO,UAAW,CAC9CC,QAAS,CACTC,cAAc,UAAD,OAAYN,MAJA,OAEvBW,EAFuB,OAM7BT,EAAS,CAACK,KAAM,cAAeC,QAASG,EAAS0B,OANpB,gDAOnB5B,QAAQC,IAAI,KAAIC,UAPG,iEAAX,wDQzCXuB,CAAsCI,YAAU,CAC3DC,KAAM,UAD2CD,CAElD4D,ICbYhE,eAJS,SAAAC,GACpB,MAAO,CAACb,KAAMa,EAAMb,QAGTY,EAfA,SAACnB,GACZ,OACI,yBAAKI,UAAU,UAEf,kBAAC,IAAD,CAAMA,UAAU,WAAWM,GAAG,YAAYV,EAAMO,KAAK4B,UACrD,kBAAC,IAAD,CAAM/B,UAAU,WAAWM,GAAG,cAA9B,QACA,kBAAC,EAAD,UCFF8E,E,iLAGE,OAAIlF,KAAKN,MAAMO,KAAKE,WAIhB,yBAAKL,UAAU,aAAakC,MAAO,CAACmD,gBAAgB,YACpD,yBAAKrF,UAAU,SACf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QAPO,kBAAC,IAAD,CAAUM,GAAG,U,GAJRO,IAAMC,WAsBfC,eAJS,SAAAC,GACpB,MAAO,CAACb,KAAMa,EAAMb,QAGTY,CAAyBqE,GC1BlCE,E,iLAEE,OACI,yBAAKtF,UAAU,sBACX,yBAAKA,UAAU,mBACX,yBAAKuF,IAAK,uEAAwEC,IAAI,QAAQxF,UAAU,oBAE5G,0CACeE,KAAKN,MAAMO,KAAK4B,SAAS,6BADxC,UAEY7B,KAAKN,MAAMO,KAAKsF,Y,GATrB5E,IAAMC,WCIvB4E,GDiBS3E,aAJS,SAAAC,GACpB,MAAO,CAACb,KAAMa,EAAMb,QAGe,GAAxBY,CAA4BI,YAAU,CACjDC,KAAM,QADiCD,CAExCmE,I,2MClBCtE,MAAQ,CACJlC,GAAI,KACJ6E,MAAM,G,EAMVC,KAAO,WACH,EAAKhE,MAAM+F,eAAe,EAAK/F,MAAMO,KAAKwB,aAAa,EAAK/B,MAAMO,KAAK4B,SAAS,EAAKnC,MAAMqB,KAAK6C,OAAO,I,EAG3GC,cAAgB,SAACjF,GACb,EAAKc,MAAMhB,WAAW,EAAKgB,MAAMO,KAAKwB,aAAa7C,I,EAEvDkF,SAAW,SAAClF,GACR,EAAKmF,SAAS,CAACnF,GAAGA,EAAI6E,MAAK,K,EAE/BtB,UAAY,WACR,EAAK4B,SAAS,CAACN,MAAK,K,EAGxBQ,iBAAmB,SAAClD,GAChB,GAAIA,EAAKc,WAAa,EAAKnC,MAAMO,KAAK4B,UAAa,EAAKnC,MAAMO,KAAKiE,KAC/D,OACI,yBAAKpE,UAAU,2BAGf,uBAAGA,UAAU,8BAA8BoC,QAAS,EAAK4B,SAASK,KAAd,eAAwBpD,EAAKnC,IAAKwF,aAAW,uBACjG,uBAAGtE,UAAU,iCAAiCoC,QAAS,EAAK2B,cAAcM,KAAnB,eAA6BpD,EAAKnC,IAAKwF,aAAW,2B,mFAvB9GpE,KAAKN,MAAMO,KAAKE,YAAYH,KAAKN,MAAM+F,eAAezF,KAAKN,MAAMO,KAAKwB,aAAazB,KAAKN,MAAMO,KAAK4B,SAAS,K,oCA6BpG,IAAD,OACV,OAAO7B,KAAKN,MAAMqB,KAAKgC,KAAI,SAAAhC,GACnB,OACI,yBAAKjB,UAAU,OAAOkD,IAAKjC,EAAKnC,IAC5B,yBAAKkB,UAAU,uBAAuBiB,EAAKA,MAC3C,yBAAKjB,UAAU,2BAA2BiB,EAAKc,UAC/C,yBAAK/B,UAAU,uBAAuBiB,EAAKoC,KAAKC,OAAO,EAAE,KACxD,EAAKa,iBAAiBlD,S,kCAMvC,IAAIf,KAAKN,MAAMO,KAAKyF,WAAY,OAAO,4BAAQxD,QAASlC,KAAK0D,MAAtB,U,mCAGvC,GAAG1D,KAAKc,MAAM2C,KACX,OAAO,kBAAC,EAAD,CAAU7E,GAAIoB,KAAKc,MAAMlC,GAAI6E,KAAMzD,KAAKc,MAAM2C,KAAMtB,UAAWnC,KAAKmC,UAAWjD,KAAM,M,+BAK/F,OAAIc,KAAKN,MAAMO,KAAKE,WAIhB,yBAAKL,UAAU,aAAakC,MAAO,CAACmD,gBAAgB,YACpD,yBAAKrF,UAAU,SACf,kBAAC,EAAD,MAEA,yBAAKA,UAAU,mBACVE,KAAKuE,YACLvE,KAAKqE,cACLrE,KAAKwE,gBAVH,kBAAC,IAAD,CAAUpE,GAAG,U,GA3DVO,IAAMC,YAiFbC,eAJS,SAAAC,GACpB,MAAO,CAACb,KAAMa,EAAMb,KAAMc,KAAM0D,OAAOhF,OAAOqB,EAAMyB,aAGjB,CAACkD,eZ1CV,SAAC9G,EAAMkD,EAASjD,GAAhB,8CAAuB,WAAMC,GAAN,eAAAC,EAAA,+EAEtBR,EAASiF,IAAT,iBAAuB1B,EAAvB,YAAmCjD,GAAK,CAC/DI,QAAS,CACTC,cAAc,UAAD,OAAYN,MAJoB,OAEvCW,EAFuC,OAK7CT,EAAS,CAACK,KAAM,mBAAoBC,QAASG,EAAS0B,KAAK,KAC3DnC,EAAS,CAACK,KAAM,UAAWC,QAASG,EAAS0B,KAAK,KANL,gDASlB,MAAxB,KAAI1B,SAASY,QACZrB,EAAS,CAACK,KAAM,aAAcC,QAAS,CAACgB,YAAY,EAAOsB,aAAc,MAVhC,yDAAvB,uDY0CyB/C,cAAxCmC,CAAqD2E,GCjErDG,E,iLAfP,OACA,yBAAK7F,UAAU,cACX,kBAAC,IAAD,KACI,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAO8F,KAAK,IAAIC,OAAK,EAACrF,UAAWc,IACjC,kBAAC,IAAD,CAAOsE,KAAK,aAAaC,OAAK,EAACrF,UAAW0E,IAE1C,kBAAC,IAAD,CAAOU,KAAK,WAAWC,OAAK,EAACrF,UAAWgF,W,GAT1C7E,IAAMC,W,slBCPT,I,2vDCEA,ICGAkF,eAAgB,CAC3B5E,KAAM6E,IACN9F,KFPW,WAAiC,IAAhCa,EAA+B,uDAAzB,CAACZ,OAAO,KAAM8F,EAAW,uCAC3C,OAAOA,EAAO9G,MACV,IAAK,aAEL,IAAK,cAEL,IAAK,cAEL,IAAK,gBAEL,IAAK,iBAEL,IAAK,aAEL,IAAK,UACD,OAAO,MAAI4B,EAAX,GAAqBkF,EAAO7G,SAChC,QACI,OAAO2B,IETfC,KCNW,WAAuB,IAAtBD,EAAqB,uDAAf,GAAIkF,EAAW,uCACjC,OAAOA,EAAO9G,MACV,IAAK,cAEL,IAAK,cACD,OAAO,MAAI4B,EAAX,GAAoBmF,KAAEC,QAAQF,EAAO7G,QAAS,OAClD,IAAK,cACD,OAAO8G,KAAEE,KAAKrF,EAAMkF,EAAO7G,SAC/B,IAAK,YACD,OAAO,MAAI2B,EAAX,GAAoBmF,KAAEC,QAAQ,CAACF,EAAO7G,SAAU,OACpD,QACI,OAAO2B,IDJfyB,SEPW,WAAuB,IAAtBzB,EAAqB,uDAAf,GAAIkF,EAAW,uCACjC,OAAOA,EAAO9G,MACV,IAAK,mBACD,OAAO,MAAI4B,EAAX,GAAoBmF,KAAEC,QAAQF,EAAO7G,QAAS,OAClD,IAAK,cACD,OAAO8G,KAAEE,KAAKrF,EAAMkF,EAAO7G,SAC/B,IAAK,iBACD,OAAO,MAAI2B,EAAX,GAAoBmF,KAAEC,QAAQ,CAACF,EAAO7G,SAAU,OACpD,QACI,OAAO2B,IFDfgC,QDRW,WAAuB,IAAtBhC,EAAqB,uDAAf,GAAIkF,EAAW,uCACjC,OAAOA,EAAO9G,MACV,IAAK,iBAEL,IAAK,iBACD,OAAO,MAAI4B,EAAX,GAAoBkF,EAAO7G,SAC/B,QACI,OAAO2B,MIFbsF,GAgBN,WACE,IAAMC,EAAkBC,eAAeC,QAAQ,SAC/C,OAAqB,OAAlBF,OAAwB,EACpBG,KAAKC,MAAMJ,GAnBGK,GAEjBC,GAAMC,YAAYC,GAAST,GAAeU,YAAgBC,MAEhEC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,EAAD,OAEFvE,SAASC,cAAc,UAczBsE,GAAMO,WAAU,kBAXhB,SAA8BpG,GAC5B,IAAMuF,EAAkBG,KAAKW,UAAUrG,GACvCwF,eAAec,QAAQ,QAASf,GASZgB,CAAqBV,GAAMW,iB","file":"static/js/main.802b9e6d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst flaskAPI = axios.create({\r\n   baseURL:'https://social-network-akram.herokuapp.com',\r\n   //baseURL:'http://localhost:5000',\r\n});\r\n\r\nexport default flaskAPI;","import flaskAPI from '../api/flaskapi';\r\n\r\nexport const createUser = values => async dispatch => {\r\n    try {\r\n    const response = await flaskAPI.post('/users', values);\r\n    dispatch({type: 'REGISTER_USER', payload: {status:response.status}})\r\n    } catch(err) {\r\n        dispatch({type: 'REGISTER_ERROR', payload: {status:err.response.status}})\r\n    }  \r\n}\r\n\r\nexport const loginUser = values => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.post('/login',values);\r\n        dispatch({type: 'LOGIN_USER', payload: {...response.data, status:response.status}});\r\n    } catch(err) {\r\n      dispatch({type: 'LOGIN_ERROR', payload: {status:err.response.status}})\r\n    }\r\n}\r\n\r\nexport const fetchPosts = (token) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.get('/posts',{\r\n        headers: {\r\n        Authorization: `Bearer ${token}`}});\r\n        dispatch({type: 'FETCH_POSTS', payload: response.data});\r\n    } catch(err) {\r\n        if(err.response.status === 401){\r\n            dispatch({type: 'AUTH_ERROR', payload: {isLoggedIn: false, access_token: \"\"}})\r\n        }\r\n      }\r\n}\r\n\r\n\r\nexport const fetchSomePosts = (token,id) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.get(`/posts/${id}`,{\r\n        headers: {\r\n        Authorization: `Bearer ${token}`}});\r\n        dispatch({type: 'FETCH_POSTS', payload: response.data[0]});\r\n        dispatch({type: 'NO_MORE', payload: response.data[1]});\r\n\r\n    } catch(err) {\r\n        if(err.response.status === 401){\r\n            dispatch({type: 'AUTH_ERROR', payload: {isLoggedIn: false, access_token: \"\"}})\r\n        }\r\n      }\r\n}\r\n\r\nexport const fetchUserPosts = (token,username,id) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.get(`/users/${username}/${id}`,{\r\n        headers: {\r\n        Authorization: `Bearer ${token}`}});\r\n        dispatch({type: 'FETCH_USER_POSTS', payload: response.data[0]});\r\n        dispatch({type: 'NO_MORE', payload: response.data[1]});\r\n\r\n    } catch(err) {\r\n        if(err.response.status === 401){\r\n            dispatch({type: 'AUTH_ERROR', payload: {isLoggedIn: false, access_token: \"\"}})\r\n        }\r\n      }\r\n}\r\n\r\nexport const createPost = (values,token) => async dispatch => {\r\n    try{\r\n        const response = await flaskAPI.post('/posts',values, {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`}});\r\n            dispatch({type: 'CREATE_POST', payload: response.data});\r\n    } catch(err){ console.log(err.response)};\r\n}\r\n\r\nexport const logoutUser = (token) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.delete('/logout', {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }});\r\n        dispatch({type: 'LOGOUT_USER', payload: response.data});\r\n    } catch(err){ console.log(err.response)};\r\n};\r\n\r\nexport const deletePost = (token,id) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.delete(`/posts/${id}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }})\r\n        dispatch({type: 'DELETE_POST', payload: id});\r\n        } catch(err){console.log(err.response)}\r\n};\r\n\r\nexport const editPost = (values,token,id,type) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.put(`/posts/${id}`,values, {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }})\r\n        if(type===1) dispatch({type: 'EDIT_POST', payload: response.data});\r\n        else if(type===2)dispatch({type: 'EDIT_USER_POST', payload: response.data});\r\n        } catch(err) {console.log(err.response)};\r\n};\r\n\r\nexport const createComment = (id,values,token) => async dispatch => {\r\n\r\n    try{\r\n        const response = await flaskAPI.post(`/comments/${id}`,values, {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`}});\r\n            let obj={[id]:response.data}\r\n            dispatch({type: 'CREATE_COMMENT', payload: obj});\r\n    } catch(err){ console.log(err.response)};\r\n}\r\n\r\nexport const fetchComments = (id,token) => async dispatch => {\r\n    try{\r\n        const response = await flaskAPI.get(`/comments/${id}`, {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`}});\r\n            let obj={[id]:response.data}\r\n            dispatch({type: 'FETCH_COMMENTS', payload: obj});\r\n    } catch(err){ console.log(err.response)};\r\n}","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {loginUser} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    renderInput({input,label,type}){\r\n        return (\r\n            <div>\r\n                <label>{label}</label>\r\n                <input {...input} type={type} className=\"ui input\" required/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.loginUser(values)\r\n    }\r\n\r\n    errormsg() {\r\n        if(this.props.user.status===422) {\r\n            return(\r\n                <div><p>Username/Password is incorrect</p></div>\r\n         );\r\n    }}\r\n\r\n    render(){\r\n        if(this.props.user.isLoggedIn) {\r\n            return <Redirect to='/dashboard' />\r\n        }\r\n       \r\n        return (\r\n            <div className=\"test\">\r\n            <h2>Login</h2>\r\n            <form className=\"test\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"username\" label=\"Username\" type=\"text\" component={this.renderInput}/>\r\n                <Field name=\"password\" label=\"Password\" type=\"password\" component={this.renderInput}/>\r\n                <button className=\"main_button\">Login</button>\r\n            </form>\r\n            {this.errormsg()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {user: state.user}\r\n};\r\n\r\nexport default connect(mapStateToProps,{loginUser})(reduxForm({\r\n    form: 'login'\r\n})(Login));","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {createUser} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\nclass Register extends React.Component {\r\n    renderInput({input,label,type}){\r\n        return (\r\n            <div>\r\n                <label>{label}</label>\r\n                <input {...input} type={type} required/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.createUser(values);\r\n    }\r\n\r\n    msg() {\r\n        if(this.props.user.status===409) {\r\n            return(\r\n                <div><p>This email/username exists in our database</p></div>\r\n         )}\r\n        else if(this.props.user.status===201){\r\n            return(\r\n                <div><p>User Added. Login</p></div>\r\n            )}\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"test\">\r\n            <h2>Sign Up</h2>\r\n            <form className=\"test\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"name\" label=\"Name\" type=\"text\" component={this.renderInput}/>\r\n                <Field name=\"email\" label=\"Email\" type=\"email\" component={this.renderInput}/>\r\n                <Field name=\"username\" label=\"Username\" type=\"text\" component={this.renderInput}/>\r\n                <Field name=\"password\" label=\"Password\" type=\"password\" component={this.renderInput}/>\r\n                <button className=\"main_button\">Submit</button>\r\n            </form>\r\n            {this.msg()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {user: state.user}\r\n};\r\n\r\nexport default connect(mapStateToProps,{createUser})(reduxForm({\r\n    form: 'register'\r\n})(Register));","import React from 'react';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport '../style.css';\r\n\r\n\r\nclass Main extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"test cover_page\" id=\"main_background\">\r\n                <div id=\"main_container\">\r\n                    <Login/>\r\n                    <Register/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect,Link} from 'react-router-dom';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {editPost} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\nclass PostEdit extends React.Component {\r\n\r\n    renderInput({input}){\r\n        return (\r\n            <div>\r\n                {/*<input {...input} type={type} maxLength=\"150\" required/>*/}\r\n                <textarea className=\"input-post\" {...input} maxLength=\"150\" placeholder={\"Edit post\"} rows=\"3\" required></textarea>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.editPost(values,this.props.user.access_token,this.props.post.id,this.props.type);\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.user.isLoggedIn || !(this.props.post.username === this.props.user.username)){\r\n            return <Redirect to='/'/>\r\n        }\r\n        return ReactDOM.createPortal(\r\n        <div className=\"ui dimmer modals visible active\" style={{position:\"fixed\"}}>\r\n            <div className=\"ui standard modal visible active\">\r\n            <div className=\"header\">\r\n                {this.props.post.post}\r\n            </div>\r\n            <div className=\"content\">\r\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} id=\"editForm\">\r\n                <Field name=\"post\" component={this.renderInput}/>\r\n            </form>\r\n            </div>\r\n            <div className=\"actions\">\r\n                <div className=\"ui buttons\">\r\n                <button className=\"ui positive button\" form=\"editForm\">Edit</button>\r\n                <div className=\"or\"></div>\r\n                <button className=\"ui button\" onClick={this.props.editClose}>close</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n   if(ownProps.type===1) return {user: state.user, post: state.post[ownProps.id]};\r\n   else if(ownProps.type===2) return {user: state.user, post: state.userPost[ownProps.id]};\r\n};\r\n\r\nexport default connect(mapStateToProps,{editPost})(reduxForm({\r\n    form: 'editedForm'\r\n})(PostEdit));","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {createComment,fetchComments} from '../actions';\r\nimport ReactEmoji from 'react-emoji';\r\n\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass Comment extends React.Component {\r\n\r\n    renderInput({input,placeholder}){\r\n        return (\r\n               <textarea className=\"input-comment\" {...input} maxLength=\"150\" placeholder={placeholder} rows=\"2\" required></textarea>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        let newValues = {\r\n            \"comment\": values[`comment${this.props.id}`]\r\n        }\r\n        this.props.createComment(this.props.id,newValues,this.props.user.access_token);\r\n        this.props.change(`comment${this.props.id}`,null);\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchComments(this.props.id,this.props.user.access_token);\r\n    }\r\n    renderComments = (id) => {\r\n        if(this.props.comment[`${id}`]){\r\n            return this.props.comment[`${id}`].map(comment => {\r\n                return (\r\n                    <div className=\"comment\" key={comment.id}>\r\n                        <div className=\"post-text-container\">{ReactEmoji.emojify(comment.comment)}</div>\r\n                        <div className=\"post-username-container\">{comment.username}</div>\r\n                        <div className=\"post-date-container\">{comment.date.substr(0,10)}</div>\r\n                    </div>\r\n                );\r\n            });\r\n    }}\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"input-comment-container\">\r\n            {this.renderComments(this.props.id)}\r\n            <form className=\"comment-form\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name={`comment${this.props.id}`}  type=\"text\" placeholder=\"Write a Comment\" component={this.renderInput}/>\r\n                <button className=\"post-button\">Comment</button>\r\n            </form>\r\n            {/* <button onClick={this.loadOnClick()}>Load Comments</button> */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user, comment: state.comment};\r\n};\r\n\r\nexport default connect(mapStateToProps,{createComment,fetchComments})(reduxForm({\r\n    form: 'comment'\r\n})(Comment));","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport ReactEmoji from 'react-emoji';\r\nimport PostEdit from './PostEdit';\r\nimport Comment from './Comment';\r\nimport {fetchPosts, fetchSomePosts, deletePost} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\nclass PostsLists extends React.Component {\r\n    state = {\r\n        id: null,\r\n        show: false,\r\n    };\r\n    componentDidMount() {\r\n        if(this.props.user.isLoggedIn) this.props.fetchSomePosts(this.props.user.access_token,8);\r\n    }\r\n    more = () => {\r\n        this.props.fetchSomePosts(this.props.user.access_token,this.props.post.length+3);\r\n    }\r\n\r\n    deleteOnClick = (id) => {\r\n        this.props.deletePost(this.props.user.access_token,id);\r\n        }\r\n    editOpen = (id) => {\r\n        this.setState({id:id, show:true});\r\n    }\r\n    editClose = () => {\r\n        this.setState({show:false});\r\n    }\r\n    displayComment = (id) => {\r\n        return(\r\n            <Comment id ={id}/>\r\n        );\r\n    }\r\n    renderDeleteEdit = (post) => {\r\n        if((post.username === this.props.user.username) || this.props.user.role) {\r\n            return (\r\n                <div className=\"post-buttons-containter\">\r\n                <i className=\"edit icon large button-edit\" onClick={this.editOpen.bind(this,post.id)} Aria-label=\"click to edit post\"></i>\r\n                <i className=\"trash icon large button-delete\" onClick={this.deleteOnClick.bind(this,post.id)} Aria-label=\"click to delete post\"></i>\r\n\r\n                {/* <button className=\"button-edit\" onClick={this.editOpen.bind(this,post.id)}>Edit</button> */}\r\n                {/* <button className=\"button-delete\" onClick={this.deleteOnClick.bind(this,post.id)}>Delete</button> */}\r\n                </div>\r\n            )};\r\n    } \r\n\r\n    renderPosts = () => {\r\n        return this.props.post.map(post => {\r\n            return (\r\n                <div className=\"post\" key={post.id}>\r\n                    <div className=\"post-text-container\">{ReactEmoji.emojify(post.post)}</div>\r\n                    {/* <img src={\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Cat_poster_1.jpg\"} alt=\"image\" className=\"ui avatar image\"/> */}\r\n                    <div className=\"post-username-container\">{post.username}</div>\r\n                    <div className=\"post-date-container\">{post.date.substr(0,10)}</div>\r\n                    {this.renderDeleteEdit(post)}\r\n                    {this.displayComment(post.id)}\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n    checkMore() {\r\n        if(!this.props.user.noMoreAll) return <button onClick={this.more}>More</button>;\r\n    }\r\n    renderEdit() {\r\n        if(this.state.show){\r\n           return <PostEdit id={this.state.id} show={this.state.show} editClose={this.editClose} type={1}/>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.props.post.length){\r\n            return (\r\n                <div className=\"posts_container\">\r\n                    {this.checkMore()}\r\n                    {this.renderPosts()}\r\n                    {this.renderEdit()}\r\n                </div>\r\n    \r\n            );\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user, post: Object.values(state.post)};\r\n};\r\n\r\nexport default connect(mapStateToProps,{fetchPosts,fetchSomePosts,deletePost})(PostsLists);","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {createPost} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass CreatePost extends React.Component {\r\n\r\n    renderInput({input,placeholder}){\r\n        return (\r\n               <textarea className=\"input-post\" {...input} maxLength=\"150\" placeholder={placeholder} rows=\"3\" required></textarea>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.createPost(values,this.props.user.access_token);\r\n        this.props.change(\"post\",null);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"input-post-container\">\r\n            <form className=\"test\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"post\"  type=\"text\" placeholder=\"What are you thinking about?\" component={this.renderInput}/>\r\n                <button className=\"post-button\">Post</button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user};\r\n};\r\n\r\nexport default connect(mapStateToProps,{createPost})(reduxForm({\r\n    form: 'post'\r\n})(CreatePost));","import React from 'react';\r\nimport {reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {logoutUser} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass Logout extends React.Component {\r\n\r\n\r\n    onSubmit = () => {\r\n        this.props.logoutUser(this.props.user.access_token)\r\n        window.localStorage.clear();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <button className=\"logout\">Logout</button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user};\r\n};\r\n\r\nexport default connect(mapStateToProps,{logoutUser})(reduxForm({\r\n    form: 'logout'\r\n})(Logout));","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Logout from './Logout';\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className=\"header\">\r\n        {/* <img src={\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Cat_poster_1.jpg\"} alt=\"image\" className=\"ui avatar image\"/> */}\r\n        <Link className=\"nav-item\" to=\"/profile\">{props.user.username}</Link>\r\n        <Link className=\"nav-item\" to=\"/dashboard\">home</Link>\r\n        <Logout/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect,Link} from 'react-router-dom';\r\nimport PostsLists from './PostsLists';\r\nimport CreatePost from './CreatePost';\r\nimport Header from './Header';\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    render(){\r\n        if(!this.props.user.isLoggedIn) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div className=\"cover_page\" style={{backgroundColor:'#f0f2f5'}}>\r\n            <div className=\"test1\">\r\n            <Header/>\r\n            <CreatePost/>\r\n            <PostsLists/>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Field, reduxForm} from 'redux-form';\r\n\r\nimport '../style.css';\r\n\r\nclass Personal extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"personal-container\">\r\n                <div className=\"image-container\">\r\n                    <img src={\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Cat_poster_1.jpg\"} alt=\"image\" className=\"image-personal\"/>\r\n                </div>\r\n                <div>\r\n                    Username: {this.props.user.username}<br/>\r\n                    Email: {this.props.user.email}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user};\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(reduxForm({\r\n    form: 'file'\r\n})(Personal));","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link,Redirect} from 'react-router-dom';\r\nimport {deletePost,fetchUserPosts} from '../actions';\r\nimport PostEdit from './PostEdit';\r\nimport Header from './Header';\r\nimport Personal from './Personal';\r\nimport '../style.css';\r\n\r\n\r\nclass Profile extends React.Component {\r\n    state = {\r\n        id: null,\r\n        show: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isLoggedIn) this.props.fetchUserPosts(this.props.user.access_token,this.props.user.username,8);\r\n    }\r\n    more = () => {\r\n        this.props.fetchUserPosts(this.props.user.access_token,this.props.user.username,this.props.post.length+3);\r\n    }\r\n\r\n    deleteOnClick = (id) => {\r\n        this.props.deletePost(this.props.user.access_token,id);\r\n        }\r\n    editOpen = (id) => {\r\n        this.setState({id:id, show:true});\r\n    }\r\n    editClose = () => {\r\n        this.setState({show:false});\r\n    }\r\n\r\n    renderDeleteEdit = (post) => {\r\n        if((post.username === this.props.user.username) || this.props.user.role) {\r\n            return (\r\n                <div className=\"post-buttons-containter\">\r\n                {/* <button className=\"button-edit\" onClick={this.editOpen.bind(this,post.id)}>Edit</button>\r\n                <button className=\"button-delete\" onClick={this.deleteOnClick.bind(this,post.id)}>Delete</button> */}\r\n                <i className=\"edit icon large button-edit\" onClick={this.editOpen.bind(this,post.id)} Aria-label=\"click to edit post\"></i>\r\n                <i className=\"trash icon large button-delete\" onClick={this.deleteOnClick.bind(this,post.id)} Aria-label=\"click to delete post\"></i>\r\n\r\n                </div>\r\n            )};\r\n    } \r\n\r\n    renderPosts() {\r\n        return this.props.post.map(post => {\r\n                return (\r\n                    <div className=\"post\" key={post.id}>\r\n                        <div className=\"post-text-container\">{post.post}</div>\r\n                        <div className=\"post-username-container\">{post.username}</div>\r\n                        <div className=\"post-date-container\">{post.date.substr(0,10)}</div>\r\n                        {this.renderDeleteEdit(post)}\r\n                    </div>\r\n                );\r\n        });\r\n    }\r\n    checkMore() {\r\n        if(!this.props.user.noMoreUser) return <button onClick={this.more}>More</button>;\r\n    }\r\n    renderEdit() {\r\n        if(this.state.show){\r\n           return <PostEdit id={this.state.id} show={this.state.show} editClose={this.editClose} type={2}/>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.user.isLoggedIn) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div className=\"cover_page\" style={{backgroundColor:'#f0f2f5'}}>\r\n            <div className=\"test1\">\r\n            <Header/>\r\n            {/* <Personal/> */}\r\n            <div className=\"posts_container\">\r\n                {this.checkMore()}      \r\n                {this.renderPosts()}\r\n                {this.renderEdit()}\r\n            </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user, post: Object.values(state.userPost)};\r\n};\r\n\r\nexport default connect(mapStateToProps,{fetchUserPosts,deletePost})(Profile);","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport Main from './Main';\r\nimport PostEdit from './PostEdit';\r\nimport Dashboard from './Dashboard';\r\nimport Profile from './Profile';\r\nimport '../style.css';\r\n\r\n\r\nclass App extends React.Component {\r\n    render(){\r\n        return (\r\n        <div className=\"cover_page\">\r\n            <BrowserRouter>\r\n                <div className=\"cover_page\">\r\n                    <Route path=\"/\" exact component={Main}/>\r\n                    <Route path=\"/dashboard\" exact component={Dashboard}/>\r\n                    {/*<Route path=\"/posts/edit/:id\" exact component={PostEdit}/>*/}\r\n                    <Route path=\"/profile\" exact component={Profile}/>\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App","import {loginUser,logoutUser,fetchPosts,fetchSomePosts} from '../actions';\r\n\r\nexport default (state={status:200}, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_USER':\r\n            return {...state, ...action.payload}\r\n        case 'LOGOUT_USER':\r\n            return {...state, ...action.payload}\r\n        case 'LOGIN_ERROR':\r\n            return {...state, ...action.payload}\r\n        case 'REGISTER_USER':\r\n            return {...state, ...action.payload}\r\n        case 'REGISTER_ERROR':\r\n            return {...state, ...action.payload}\r\n        case 'AUTH_ERROR':\r\n            return {...state, ...action.payload}\r\n        case 'NO_MORE':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n};","import _ from 'lodash';\r\nimport {createComment} from '../actions';\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case 'CREATE_COMMENT':\r\n            return {...state,...action.payload};\r\n        case 'FETCH_COMMENTS':\r\n            return {...state,...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};","import {combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport userReducer from './userReducer';\r\nimport postsReducer from './postReducer';\r\nimport userPostsReducer from './userPostsReducer';\r\nimport commentReducer from './commentReducer';\r\n\r\nexport default combineReducers({\r\n    form: formReducer,\r\n    user: userReducer,\r\n    post: postsReducer,\r\n    userPost: userPostsReducer,\r\n    comment: commentReducer\r\n});\r\n","import _ from 'lodash';\r\nimport {fetchPosts,fetchSomePosts,createPost,deletePost,editPost} from '../actions';\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POSTS':\r\n            return {...state,..._.mapKeys(action.payload, 'id')};\r\n        case 'CREATE_POST':\r\n            return {...state,..._.mapKeys(action.payload, 'id')};\r\n        case 'DELETE_POST':\r\n            return _.omit(state,action.payload);    \r\n        case 'EDIT_POST':\r\n            return {...state,..._.mapKeys([action.payload], 'id')};\r\n        default:\r\n            return state;\r\n    }\r\n};","import _ from 'lodash';\r\nimport {fetchUserPosts,editPost,deletePost} from '../actions';\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_USER_POSTS':\r\n            return {...state,..._.mapKeys(action.payload, 'id')};\r\n        case 'DELETE_POST':\r\n            return _.omit(state,action.payload);        \r\n        case 'EDIT_USER_POST':\r\n            return {...state,..._.mapKeys([action.payload], 'id')};\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore,applyMiddleware} from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst presistedState = loadFromSessionStorage();\r\n\r\nconst store=createStore(reducers,presistedState,applyMiddleware(reduxThunk));\r\n\r\nReactDom.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>, \r\n  document.querySelector('#root')\r\n);\r\n\r\nfunction saveToSessionStorage(state) {\r\n  const serializedState = JSON.stringify(state);\r\n  sessionStorage.setItem('state', serializedState);\r\n}\r\n\r\nfunction loadFromSessionStorage(){\r\n  const serializedState = sessionStorage.getItem('state');\r\n  if(serializedState===null) return undefined;\r\n  return JSON.parse(serializedState)\r\n}\r\n\r\nstore.subscribe(() => saveToSessionStorage(store.getState()));\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}