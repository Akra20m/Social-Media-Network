{"version":3,"sources":["api/flaskapi.js","actions/index.js","components/Login.js","components/Register.js","components/Main.js","components/PostEdit.js","components/PostsLists.js","components/CreatePost.js","components/Logout.js","components/Dashboard.js","components/Profile.js","components/App.js","reducers/userReducer.js","reducers/postReducer.js","reducers/index.js","index.js"],"names":["flaskAPI","axios","create","baseURL","fetchSomePosts","token","id","dispatch","a","get","headers","Authorization","response","type","payload","data","status","isLoggedIn","access_token","deletePost","delete","console","log","Login","onSubmit","values","props","loginUser","input","label","required","this","user","to","className","handleSubmit","Field","name","component","renderInput","errormsg","React","Component","connect","state","post","reduxForm","form","Register","createUser","msg","Main","PostEdit","editPost","maxLength","username","ownProps","match","params","put","PostsLists","more","length","onClick","renderDeleteEdit","role","bind","map","key","checkMore","renderPosts","Object","fetchPosts","CreatePost","createPost","placeholder","rows","Logout","logoutUser","Dashboard","Profile","fetchUserPosts","App","path","exact","combineReducers","formReducer","action","_","mapKeys","omit","presistedState","serializedState","localStorage","getItem","JSON","parse","loadFromLocalStorage","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDom","render","document","querySelector","subscribe","stringify","setItem","saveToLocalStorage","getState"],"mappings":"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","file":"static/js/main.5843e293.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst flaskAPI = axios.create({\r\n    baseURL:'https://social-network-akram.herokuapp.com',\r\n    //baseURL:'http://localhost:5000',\r\n});\r\n\r\nexport default flaskAPI;","import flaskAPI from '../api/flaskapi';\r\n\r\nexport const createUser = values => async dispatch => {\r\n    try {\r\n    const response = await flaskAPI.post('/users', values);\r\n    dispatch({type: 'REGISTER_USER', payload: {status:response.status}})\r\n    } catch(err) {\r\n        dispatch({type: 'REGISTER_ERROR', payload: {status:err.response.status}})\r\n    }  \r\n}\r\n\r\nexport const loginUser = values => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.post('/login',values);\r\n        dispatch({type: 'LOGIN_USER', payload: {...response.data, status:response.status}});\r\n    } catch(err) {\r\n      dispatch({type: 'LOGIN_ERROR', payload: {status:err.response.status}})\r\n    }\r\n}\r\n\r\nexport const fetchPosts = (token) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.get('/posts',{\r\n        headers: {\r\n        Authorization: `Bearer ${token}`}});\r\n        dispatch({type: 'FETCH_POSTS', payload: response.data});\r\n    } catch(err) {\r\n        if(err.response.status === 401){\r\n            dispatch({type: 'AUTH_ERROR', payload: {isLoggedIn: false, access_token: \"\"}})\r\n        }\r\n      }\r\n}\r\n\r\n\r\nexport const fetchSomePosts = (token,id) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.get(`/posts/${id}`,{\r\n        headers: {\r\n        Authorization: `Bearer ${token}`}});\r\n        id++;\r\n        dispatch({type: 'FETCH_POSTS', payload: response.data});\r\n    } catch(err) {\r\n        if(err.response.status === 401){\r\n            dispatch({type: 'AUTH_ERROR', payload: {isLoggedIn: false, access_token: \"\"}})\r\n        }\r\n      }\r\n}\r\n\r\nexport const fetchUserPosts = (token,username,id) => async dispatch => {\r\n    try {\r\n        console.log(id,username);\r\n        const response = await flaskAPI.get(`/users/${username}/${id}`,{\r\n        headers: {\r\n        Authorization: `Bearer ${token}`}});\r\n        id++;\r\n        console.log(response.data);\r\n        dispatch({type: 'FETCH_POSTS', payload: response.data});\r\n    } catch(err) {\r\n        if(err.response.status === 401){\r\n            dispatch({type: 'AUTH_ERROR', payload: {isLoggedIn: false, access_token: \"\"}})\r\n        }\r\n      }\r\n}\r\n\r\nexport const createPost = (values,token) => async dispatch => {\r\n    try{\r\n        const response = await flaskAPI.post('/posts',values, {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`}});\r\n            dispatch({type: 'CREATE_POST', payload: response.data});\r\n    } catch(err){ console.log(err.response)};\r\n}\r\n\r\nexport const logoutUser = (token) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.delete('/logout', {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }});\r\n        dispatch({type: 'LOGOUT_USER', payload: response.data});\r\n    } catch(err){ console.log(err.response)};\r\n};\r\n\r\nexport const deletePost = (token,id) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.delete(`/posts/${id}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }})\r\n        dispatch({type: 'DELETE_POST', payload: id});\r\n        } catch(err){console.log(err.response)}\r\n};\r\n\r\nexport const editPost = (values,token,id) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.put(`/posts/${id}`,values, {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }})\r\n        dispatch({type: 'EDIT_POST', payload: response.data});\r\n        } catch(err) {console.log(err.response)};\r\n};\r\n","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {loginUser} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    renderInput({input,label,type}){\r\n        return (\r\n            <div>\r\n                <label>{label}</label>\r\n                <input {...input} type={type} required/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.loginUser(values)\r\n    }\r\n\r\n    errormsg() {\r\n        if(this.props.user.status===422) {\r\n            return(\r\n                <div><p>Username/Password is incorrect</p></div>\r\n         );\r\n    }}\r\n\r\n    render(){\r\n        if(this.props.user.isLoggedIn) {\r\n            return <Redirect to='/dashboard' />\r\n        }\r\n       \r\n        return (\r\n            <div className=\"test\">\r\n            <h3>Login</h3>\r\n            <form className=\"test\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"username\" label=\"Username\" type=\"text\" component={this.renderInput}/>\r\n                <Field name=\"password\" label=\"Password\" type=\"password\" component={this.renderInput}/>\r\n                <button className=\"main_button\">Login</button>\r\n            </form>\r\n            {this.errormsg()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {user: state.user}\r\n};\r\n\r\nexport default connect(mapStateToProps,{loginUser})(reduxForm({\r\n    form: 'login'\r\n})(Login));","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {createUser} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\nclass Register extends React.Component {\r\n    renderInput({input,label,type}){\r\n        return (\r\n            <div>\r\n                <label>{label}</label>\r\n                <input {...input} type={type} required/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.createUser(values);\r\n    }\r\n\r\n    msg() {\r\n        if(this.props.user.status===409) {\r\n            return(\r\n                <div><p>This email/username exists in our database</p></div>\r\n         )}\r\n        else if(this.props.user.status===201){\r\n            return(\r\n                <div><p>User Added. Login</p></div>\r\n            )}\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"test\">\r\n            <h3>Sign Up</h3>\r\n            <form className=\"test\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"name\" label=\"Name\" type=\"text\" component={this.renderInput}/>\r\n                <Field name=\"email\" label=\"Email\" type=\"email\" component={this.renderInput}/>\r\n                <Field name=\"username\" label=\"Username\" type=\"text\" component={this.renderInput}/>\r\n                <Field name=\"password\" label=\"Password\" type=\"password\" component={this.renderInput}/>\r\n                <button className=\"main_button\">Submit</button>\r\n            </form>\r\n            {this.msg()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {user: state.user}\r\n};\r\n\r\nexport default connect(mapStateToProps,{createUser})(reduxForm({\r\n    form: 'register'\r\n})(Register));","import React from 'react';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport '../style.css';\r\n\r\n\r\nclass Main extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"test cover_page\" id=\"main_background\">\r\n                <div id=\"main_container\">\r\n                    <Login/>\r\n                    <Register/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect,Link} from 'react-router-dom';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {editPost} from '../actions';\r\n\r\n\r\nclass PostEdit extends React.Component {\r\n\r\n\r\n    renderInput({input,type}){\r\n        return (\r\n            <div>\r\n                <input {...input} type={type} maxLength=\"150\" required/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.editPost(values,this.props.user.access_token,this.props.post.id)\r\n    }\r\n\r\n\r\n    render(){\r\n        if(!this.props.user.isLoggedIn || !(this.props.post.username === this.props.user.username)){\r\n            return <Redirect to='/'/>\r\n        }\r\n        return (\r\n        <div>\r\n            {this.props.post.post}\r\n            <div>\r\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"post\" type=\"text\" component={this.renderInput}/>\r\n                <button>Edit</button>\r\n            </form>\r\n            </div>\r\n            <Link to={`/dashboard`}>Dashboard</Link>\r\n        </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n    return {user: state.user, post: state.post[ownProps.match.params.id]};\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,{editPost})(reduxForm({\r\n    form: 'editedForm'\r\n})(PostEdit));","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {fetchPosts, fetchSomePosts, deletePost} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\nclass PostsLists extends React.Component {\r\n    componentDidMount() {\r\n        if(this.props.user.isLoggedIn) this.props.fetchSomePosts(this.props.user.access_token,6);\r\n    }\r\n    more = () => {\r\n        this.props.fetchSomePosts(this.props.user.access_token,this.props.post.length+3);\r\n    }\r\n\r\n    onClick = (id) => {\r\n        this.props.deletePost(this.props.user.access_token,id);\r\n        }\r\n\r\n    renderDeleteEdit = (post) => {\r\n        if((post.username === this.props.user.username) || this.props.user.role) {\r\n            return (\r\n                <div className=\"post-buttons-containter\">\r\n                <Link to={`/posts/edit/${post.id}`}><button>Edit</button></Link>\r\n                <button onClick={this.onClick.bind(this,post.id)}>Delete</button>\r\n                </div>\r\n            )};\r\n    } \r\n\r\n    renderPosts() {\r\n        return this.props.post.map(post => {\r\n            return (\r\n                <div className=\"post\" key={post.id}>\r\n                    <div className=\"post-text-container\">{post.post}</div>\r\n                    <div className=\"post-username-container\">{post.username}</div>\r\n                    {this.renderDeleteEdit(post)}\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n    checkMore() {\r\n        if(this.props.post.length > 7) return <button onClick={this.more}>More</button>;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"posts_container\">\r\n                {this.checkMore()}\r\n                {this.renderPosts()}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user, post: Object.values(state.post)};\r\n};\r\n\r\nexport default connect(mapStateToProps,{fetchPosts,fetchSomePosts,deletePost})(PostsLists);","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {createPost} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\n\r\n\r\nclass CreatePost extends React.Component {\r\n\r\n    renderInput({input,type,placeholder}){\r\n        return (\r\n               // <input className=\"input-post\" {...input} type={type} placeholder={placeholder} maxLength=\"150\" required/>\r\n               <textarea className=\"input-post\" {...input} maxLength=\"150\" placeholder={placeholder} rows=\"3\" required></textarea>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.createPost(values,this.props.user.access_token)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"input-post-container\">\r\n            <form className=\"test\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"post\"  type=\"text\" placeholder=\"What are you thinking about?\" component={this.renderInput}/>\r\n                <button>Post</button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user};\r\n};\r\n\r\nexport default connect(mapStateToProps,{createPost})(reduxForm({\r\n    form: 'post'\r\n})(CreatePost));","import React from 'react';\r\nimport {reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {logoutUser} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass Logout extends React.Component {\r\n\r\n\r\n    onSubmit = () => {\r\n        this.props.logoutUser(this.props.user.access_token)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"logout\">\r\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <button>Logout</button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user};\r\n};\r\n\r\nexport default connect(mapStateToProps,{logoutUser})(reduxForm({\r\n    form: 'logout'\r\n})(Logout));","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect,Link} from 'react-router-dom';\r\nimport PostsLists from './PostsLists';\r\nimport CreatePost from './CreatePost';\r\nimport Logout from './Logout';\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n   \r\n    render(){\r\n        if(!this.props.user.isLoggedIn) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div className=\"test1\">\r\n            <Logout/>\r\n            <h3 className=\"flex-component\">Welcome <Link to=\"/profile\">{this.props.user.username}</Link></h3>\r\n            <CreatePost/>\r\n            <PostsLists/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link,Redirect} from 'react-router-dom';\r\nimport {fetchSomePosts, deletePost,fetchUserPosts} from '../actions';\r\nimport Logout from './Logout';\r\nimport '../style.css';\r\n\r\n\r\nclass Profile extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isLoggedIn) this.props.fetchUserPosts(this.props.user.access_token,this.props.user.username,7);\r\n    }\r\n    more = () => {\r\n        this.props.fetchUserPosts(this.props.user.access_token,this.props.user.username,this.props.post.length+3);\r\n    }\r\n\r\n    onClick = (id) => {\r\n        this.props.deletePost(this.props.user.access_token,id);\r\n        }\r\n\r\n    renderDeleteEdit = (post) => {\r\n        if((post.username === this.props.user.username) || this.props.user.role) {\r\n            return (\r\n                <div className=\"post-buttons-containter\">\r\n                <Link to={`/posts/edit/${post.id}`}><button>Edit</button></Link>\r\n                <button onClick={this.onClick.bind(this,post.id)}>Delete</button>\r\n                </div>\r\n            )};\r\n    } \r\n\r\n    renderPosts() {\r\n        return this.props.post.map(post => {\r\n            if(post.username === this.props.user.username) {\r\n                return (\r\n                    <div className=\"post\" key={post.id}>\r\n                        <div className=\"post-text-container\">{post.post}</div>\r\n                        <div className=\"post-username-container\">{post.username}</div>\r\n                        {this.renderDeleteEdit(post)}\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n    checkMore() {\r\n        if(this.props.post.length > 7) return <button onClick={this.more}>More</button>;\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.user.isLoggedIn) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div className=\"test1\">\r\n            <Logout/>\r\n            <div className=\"posts_container\">\r\n                {this.checkMore()}\r\n                {this.renderPosts()}\r\n                {console.log(this.renderPosts())}\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user, post: Object.values(state.post)};\r\n};\r\n\r\nexport default connect(mapStateToProps,{fetchUserPosts,fetchSomePosts,deletePost})(Profile);","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport Main from './Main';\r\nimport PostEdit from './PostEdit';\r\nimport Dashboard from './Dashboard';\r\nimport Profile from './Profile';\r\nimport '../style.css';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n        <div className=\"cover_page\">\r\n            <BrowserRouter>\r\n                <div className=\"cover_page\">\r\n                    <Route path=\"/\" exact component={Main}/>\r\n                    <Route path=\"/dashboard\" exact component={Dashboard}/>\r\n                    <Route path=\"/posts/edit/:id\" exact component={PostEdit}/>\r\n                    <Route path=\"/profile\" exact component={Profile}/>\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App","import {loginUser,logoutUser,fetchPosts} from '../actions';\r\n\r\nexport default (state={status:200}, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_USER':\r\n            return {...state, ...action.payload}\r\n        case 'LOGOUT_USER':\r\n            return {...state, ...action.payload}\r\n        case 'LOGIN_ERROR':\r\n            return {...state, ...action.payload}\r\n        case 'REGISTER_USER':\r\n            return {...state, ...action.payload}\r\n        case 'REGISTER_ERROR':\r\n            return {...state, ...action.payload}\r\n        case 'AUTH_ERROR':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n};","import _ from 'lodash';\r\nimport {fetchPosts,createPost,deletePost,editPost} from '../actions';\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POSTS':\r\n            return {...state,..._.mapKeys(action.payload, 'id')};\r\n        case 'CREATE_POST':\r\n            return {...state,..._.mapKeys(action.payload, 'id')};\r\n        case 'DELETE_POST':\r\n            return _.omit(state,action.payload);    \r\n        case 'EDIT_POST':\r\n            return {...state,..._.mapKeys(action.payload, 'id')};\r\n        default:\r\n            return state;\r\n    }\r\n};","import {combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport userReducer from './userReducer';\r\nimport postsReducer from './postReducer';\r\n\r\nexport default combineReducers({\r\n    form: formReducer,\r\n    user: userReducer,\r\n    post: postsReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore,applyMiddleware} from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst presistedState = loadFromLocalStorage();\r\n\r\nconst store=createStore(reducers,presistedState,applyMiddleware(reduxThunk));\r\n\r\nReactDom.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>, \r\n  document.querySelector('#root')\r\n);\r\n\r\nfunction saveToLocalStorage(state) {\r\n  const serializedState = JSON.stringify(state);\r\n  localStorage.setItem('state', serializedState);\r\n}\r\n\r\nfunction loadFromLocalStorage(){\r\n  const serializedState = localStorage.getItem('state');\r\n  if(serializedState===null) return undefined;\r\n  return JSON.parse(serializedState)\r\n}\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));"],"sourceRoot":""}