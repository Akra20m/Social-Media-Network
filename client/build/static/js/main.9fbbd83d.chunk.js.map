{"version":3,"sources":["api/flaskapi.js","actions/index.js","components/Login.js","components/Register.js","components/Main.js","components/PostEdit.js","helper/index.js","components/Comment.js","components/PostsLists.js","components/CreatePost.js","components/Logout.js","components/Header.js","components/Dashboard.js","components/AvatarDropdown.js","components/Personal.js","components/Profile.js","components/App.js","reducers/userReducer.js","reducers/avatarReducer.js","reducers/index.js","reducers/postReducer.js","reducers/userPostsReducer.js","reducers/commentReducer.js","index.js"],"names":["flaskAPI","axios","create","baseURL","deletePost","token","id","dispatch","a","delete","headers","Authorization","type","payload","console","log","response","Login","onSubmit","values","props","loginUser","change","input","label","className","required","this","user","status","isLoggedIn","to","handleSubmit","Field","name","component","renderInput","errormsg","React","Component","connect","state","post","data","reduxForm","form","Register","createUser","msg","Main","PostEdit","editPost","access_token","maxLength","placeholder","rows","username","ReactDOM","createPortal","style","position","onClick","editClose","document","querySelector","ownProps","userPost","put","avatarInfo","avatarOptions","key","value","image","avatar","src","Comment","newValues","createComment","deleteOnClick","deleteComment","renderDelete","comment","role","bind","Aria-label","renderComments","map","ReactEmoji","emojify","alt","date","substr","fetchComments","obj","get","postid","PostsLists","show","more","fetchSomePosts","length","editOpen","setState","displayComment","renderDeleteEdit","renderPosts","noMoreAll","checkMore","renderEdit","Object","fetchPosts","CreatePost","createPost","Logout","logoutUser","window","localStorage","clear","Dashboard","fetchAvatars","backgroundColor","AvatarDropdown","onAvatarChange","e","updateAvatar","Dropdown","text","icon","floating","labeled","button","Menu","Header","content","option","Item","Personal","email","Profile","fetchUserPosts","noMoreUser","App","path","exact","combineReducers","formReducer","action","_","mapKeys","omit","presistedState","serializedState","sessionStorage","getItem","JSON","parse","loadFromSessionStorage","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDom","render","subscribe","stringify","setItem","saveToSessionStorage","getState"],"mappings":"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","file":"static/js/main.9fbbd83d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst flaskAPI = axios.create({\r\n   baseURL:'https://social-network-akram.herokuapp.com',\r\n   //baseURL:'http://localhost:5000',\r\n});\r\n\r\nexport default flaskAPI;","import flaskAPI from '../api/flaskapi';\r\n\r\nexport const createUser = values => async dispatch => {\r\n    try {\r\n    const response = await flaskAPI.post('/users', values);\r\n    dispatch({type: 'REGISTER_USER', payload: {status:response.status}})\r\n    } catch(err) {\r\n        dispatch({type: 'REGISTER_ERROR', payload: {status:err.response.status}})\r\n    }  \r\n}\r\n\r\nexport const loginUser = values => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.post('/login',values);\r\n        dispatch({type: 'LOGIN_USER', payload: {...response.data, status:response.status}});\r\n    } catch(err) {\r\n      dispatch({type: 'LOGIN_ERROR', payload: {status:err.response.status}})\r\n    }\r\n}\r\n\r\nexport const fetchPosts = (token) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.get('/posts',{\r\n        headers: {\r\n        Authorization: `Bearer ${token}`}});\r\n        dispatch({type: 'FETCH_POSTS', payload: response.data});\r\n    } catch(err) {\r\n        if(err.response.status === 401){\r\n            dispatch({type: 'AUTH_ERROR', payload: {isLoggedIn: false, access_token: \"\"}})\r\n        }\r\n      }\r\n}\r\n\r\n\r\nexport const fetchSomePosts = (token,id) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.get(`/posts/${id}`,{\r\n        headers: {\r\n        Authorization: `Bearer ${token}`}});\r\n        dispatch({type: 'FETCH_POSTS', payload: response.data[0]});\r\n        dispatch({type: 'NO_MORE', payload: response.data[1]});\r\n\r\n    } catch(err) {\r\n        if(err.response.status === 401){\r\n            dispatch({type: 'AUTH_ERROR', payload: {isLoggedIn: false, access_token: \"\"}})\r\n        }\r\n      }\r\n}\r\n\r\nexport const fetchUserPosts = (token,username,id) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.get(`/users/${username}/${id}`,{\r\n        headers: {\r\n        Authorization: `Bearer ${token}`}});\r\n        dispatch({type: 'FETCH_USER_POSTS', payload: response.data[0]});\r\n        dispatch({type: 'NO_MORE', payload: response.data[1]});\r\n\r\n    } catch(err) {\r\n        if(err.response.status === 401){\r\n            dispatch({type: 'AUTH_ERROR', payload: {isLoggedIn: false, access_token: \"\"}})\r\n        }\r\n      }\r\n}\r\n\r\nexport const createPost = (values,token) => async dispatch => {\r\n    try{\r\n        const response = await flaskAPI.post('/posts',values, {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`}});\r\n            dispatch({type: 'CREATE_POST', payload: response.data});\r\n    } catch(err){ console.log(err.response)};\r\n}\r\n\r\nexport const logoutUser = (token) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.delete('/logout', {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }});\r\n        dispatch({type: 'LOGOUT_USER', payload: response.data});\r\n    } catch(err){ console.log(err.response)};\r\n};\r\n\r\nexport const deletePost = (token,id) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.delete(`/posts/${id}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }})\r\n        dispatch({type: 'DELETE_POST', payload: id});\r\n        } catch(err){console.log(err.response)}\r\n};\r\n\r\nexport const editPost = (values,token,id,type) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.put(`/posts/${id}`,values, {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }})\r\n        if(type===1) dispatch({type: 'EDIT_POST', payload: response.data});\r\n        else if(type===2)dispatch({type: 'EDIT_USER_POST', payload: response.data});\r\n        } catch(err) {console.log(err.response)};\r\n};\r\n\r\nexport const createComment = (id,values,token) => async dispatch => {\r\n\r\n    try{\r\n        const response = await flaskAPI.post(`/comments/${id}`,values, {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`}});\r\n            let obj={[id]:response.data}\r\n            dispatch({type: 'CREATE_COMMENT', payload: obj});\r\n    } catch(err){ console.log(err.response)};\r\n}\r\n\r\nexport const fetchComments = (id,token) => async dispatch => {\r\n    try{\r\n        const response = await flaskAPI.get(`/comments/${id}`, {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`}});\r\n            let obj={[id]:response.data}\r\n            dispatch({type: 'FETCH_COMMENTS', payload: obj});\r\n    } catch(err){ console.log(err.response)};\r\n}\r\n\r\nexport const deleteComment = (token,id,postid) => async dispatch => {\r\n    try {\r\n        const response = await flaskAPI.delete(`/comments/${id}/${postid}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }});\r\n            let obj={[postid]:response.data}\r\n            dispatch({type: 'DELETE_COMMENT', payload: obj});\r\n        } catch(err){console.log(err.response)};\r\n}\r\n\r\nexport const fetchAvatars = (token) => async dispatch => {\r\n    try{\r\n        const response = await flaskAPI.get(`/avatar`, {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`}});\r\n        if(response.status===201){\r\n            dispatch({type: 'FETCH_AVATARS', payload: response.data});\r\n        }\r\n    } catch(err){ console.log(err.response)};\r\n}\r\n\r\nexport const updateAvatar = (id,username,token) => async dispatch => {\r\n    try{\r\n        const response = await flaskAPI.get(`/avatar/${id}`, {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`}});\r\n        if(response.status===201){\r\n            let obj={'avatar':id,'username':username};\r\n            dispatch({type: 'UPDATE_AVATAR', payload: [obj]});\r\n        }\r\n    } catch(err){ console.log(err.response)};\r\n}\r\n\r\n","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {loginUser} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    renderInput({input,label,type}){\r\n        return (\r\n            <div>\r\n                <label>{label}</label>\r\n                <input {...input} type={type} className=\"ui input\" required/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.loginUser(values);\r\n        this.props.change(`username`,null);\r\n        this.props.change(`password`,null);\r\n    }\r\n\r\n    errormsg() {\r\n        if(this.props.user.status===422) {\r\n            return(\r\n                <div><p>Username/Password is incorrect</p></div>\r\n         );\r\n    }}\r\n\r\n    render(){\r\n        if(this.props.user.isLoggedIn) {\r\n            return <Redirect to='/dashboard' />\r\n        }\r\n       \r\n        return (\r\n            <div className=\"test\">\r\n            <h2>Login</h2>\r\n            <form className=\"test\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"username\" label=\"Username\" type=\"text\" component={this.renderInput}/>\r\n                <Field name=\"password\" label=\"Password\" type=\"password\" component={this.renderInput}/>\r\n                <button className=\"main_button\">Login</button>\r\n            </form>\r\n            {this.errormsg()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {user: state.user}\r\n};\r\n\r\nexport default connect(mapStateToProps,{loginUser})(reduxForm({\r\n    form: 'login'\r\n})(Login));","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {createUser} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\nclass Register extends React.Component {\r\n    renderInput({input,label,type}){\r\n        return (\r\n            <div>\r\n                <label>{label}</label>\r\n                <input {...input} type={type} required/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.createUser(values);\r\n    }\r\n\r\n    msg() {\r\n        if(this.props.user.status===409) {\r\n            return(\r\n                <div><p>This email/username exists in our database</p></div>\r\n         )}\r\n        else if(this.props.user.status===201){\r\n            return(\r\n                <div><p>User Added. Login</p></div>\r\n            )}\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"test\">\r\n            <h2>Sign Up</h2>\r\n            <form className=\"test\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"name\" label=\"Name\" type=\"text\" component={this.renderInput}/>\r\n                <Field name=\"email\" label=\"Email\" type=\"email\" component={this.renderInput}/>\r\n                <Field name=\"username\" label=\"Username\" type=\"text\" component={this.renderInput}/>\r\n                <Field name=\"password\" label=\"Password\" type=\"password\" component={this.renderInput}/>\r\n                <button className=\"main_button\">Submit</button>\r\n            </form>\r\n            {this.msg()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {user: state.user}\r\n};\r\n\r\nexport default connect(mapStateToProps,{createUser})(reduxForm({\r\n    form: 'register'\r\n})(Register));","import React from 'react';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport '../style.css';\r\n\r\n\r\nclass Main extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"test cover_page\" id=\"main_background\">\r\n                <div id=\"main_container\">\r\n                    <Login/>\r\n                    <Register/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect,Link} from 'react-router-dom';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {editPost} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\nclass PostEdit extends React.Component {\r\n\r\n    renderInput({input}){\r\n        return (\r\n            <div>\r\n                {/*<input {...input} type={type} maxLength=\"150\" required/>*/}\r\n                <textarea className=\"input-post\" {...input} maxLength=\"150\" placeholder={\"Edit post\"} rows=\"3\" required></textarea>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.editPost(values,this.props.user.access_token,this.props.post.id,this.props.type);\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.user.isLoggedIn || !(this.props.post.username === this.props.user.username)){\r\n            return <Redirect to='/'/>\r\n        }\r\n        return ReactDOM.createPortal(\r\n        <div className=\"ui dimmer modals visible active\" style={{position:\"fixed\"}}>\r\n            <div className=\"ui standard modal visible active\">\r\n            <div className=\"header\">\r\n                {this.props.post.post}\r\n            </div>\r\n            <div className=\"content\">\r\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} id=\"editForm\">\r\n                <Field name=\"post\" component={this.renderInput}/>\r\n            </form>\r\n            </div>\r\n            <div className=\"actions\">\r\n                <div className=\"ui buttons\">\r\n                <button className=\"ui positive button\" form=\"editForm\">Edit</button>\r\n                <div className=\"or\"></div>\r\n                <button className=\"ui button\" onClick={this.props.editClose}>close</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n   if(ownProps.type===1) return {user: state.user, post: state.post[ownProps.id]};\r\n   else if(ownProps.type===2) return {user: state.user, post: state.userPost[ownProps.id]};\r\n};\r\n\r\nexport default connect(mapStateToProps,{editPost})(reduxForm({\r\n    form: 'editedForm'\r\n})(PostEdit));","const avatarInfo = {\r\n    \"1\":\"https://semantic-ui.com/images/avatar2/large/elyse.png\",\r\n    \"2\":\"https://semantic-ui.com/images/avatar2/large/kristy.png\",\r\n    \"3\":\"https://semantic-ui.com/images/avatar2/large/lena.png\",\r\n    \"4\":\"https://semantic-ui.com/images/avatar2/large/lindsay.png\",\r\n    \"5\":\"https://semantic-ui.com/images/avatar2/large/mark.png\",\r\n    \"6\":\"https://semantic-ui.com/images/avatar2/large/matthew.png\"\r\n}\r\n\r\nconst avatarOptions = [\r\n    {\r\n        key: '1',\r\n        // text: 'Jenny Hess',\r\n        value: '1',\r\n        image: { avatar: true, src: 'https://semantic-ui.com/images/avatar2/large/elyse.png' },\r\n    },\r\n    {\r\n        key: '2',\r\n        // text: 'Elliot Fu',\r\n        value: '2',\r\n        image: { avatar: true, src: 'https://semantic-ui.com/images/avatar2/large/kristy.png' },\r\n    },\r\n    {\r\n        key: '3',\r\n        // text: 'Stevie Feliciano',\r\n        value: '3',\r\n        image: { avatar: true, src: 'https://semantic-ui.com/images/avatar2/large/lena.png' },\r\n    },\r\n    {\r\n        key: '4',\r\n        // text: 'Stevie Feliciano',\r\n        value: '4',\r\n        image: { avatar: true, src: 'https://semantic-ui.com/images/avatar2/large/lindsay.png' },\r\n    },\r\n    {\r\n        key: '5',\r\n        // text: 'Stevie Feliciano',\r\n        value: '5',\r\n        image: { avatar: true, src: 'https://semantic-ui.com/images/avatar2/large/mark.png' },\r\n    },\r\n    {\r\n        key: '6',\r\n        // text: 'Stevie Feliciano',\r\n        value: '6',\r\n        image: { avatar: true, src: 'https://semantic-ui.com/images/avatar2/large/matthew.png' },\r\n    },\r\n      \r\n  ]\r\nexport {avatarInfo,avatarOptions};","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {createComment,fetchComments,deleteComment} from '../actions';\r\nimport ReactEmoji from 'react-emoji';\r\nimport {avatarInfo} from '../helper';\r\n\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass Comment extends React.Component {\r\n\r\n    renderInput({input,placeholder}){\r\n        return (\r\n               <textarea className=\"input-comment\" {...input} maxLength=\"150\" placeholder={placeholder} rows=\"2\" required></textarea>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        let newValues = {\r\n            \"comment\": values[`comment${this.props.id}`]\r\n        }\r\n        this.props.createComment(this.props.id,newValues,this.props.user.access_token);\r\n        this.props.change(`comment${this.props.id}`,null);\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchComments(this.props.id,this.props.user.access_token);\r\n    }\r\n    deleteOnClick = (id) => {\r\n        this.props.deleteComment(this.props.user.access_token,id,this.props.id);\r\n        }\r\n\r\n    renderDelete = (comment) => {\r\n        if((comment.username === this.props.user.username) || this.props.user.role) {\r\n            return (\r\n                <div className=\"post-buttons-containter\">\r\n                    <i className=\"trash icon large button-delete\" onClick={this.deleteOnClick.bind(this,comment.id)} Aria-label=\"click to delete post\"></i>\r\n                </div>\r\n            )};\r\n    }\r\n    renderComments = (id) => {\r\n        if(this.props.comment[`${id}`]){\r\n            return this.props.comment[`${id}`].map(comment => {\r\n                return (\r\n                    <div className=\"comment\" key={comment.id}>\r\n                        <div className=\"post-text-container\">{ReactEmoji.emojify(comment.comment)}</div>\r\n                        <img src={this.props.avatar[comment.username]? avatarInfo[this.props.avatar[comment.username].avatar]: \"https://semantic-ui.com/images/avatar2/large/elyse.png\"} alt=\"image\" className=\"ui avatar image\"/>\r\n                        <div className=\"post-username-container\">{comment.username}</div>\r\n                        <div className=\"post-date-container\">{comment.date.substr(0,10)}</div>\r\n                        {this.renderDelete(comment)}\r\n                    </div>\r\n                ); \r\n            });\r\n    }}\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"input-comment-container\">\r\n            {this.renderComments(this.props.id)}\r\n            <form className=\"comment-form\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name={`comment${this.props.id}`}  type=\"text\" placeholder=\"Write a Comment\" component={this.renderInput}/>\r\n                <button className=\"post-button\">Comment</button>\r\n            </form>\r\n            {/* <button onClick={this.loadOnClick()}>Load Comments</button> */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user, comment: state.comment, avatar:state.avatar};\r\n};\r\n\r\nexport default connect(mapStateToProps,{createComment,fetchComments,deleteComment})(reduxForm({\r\n    form: 'comment'\r\n})(Comment));","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport ReactEmoji from 'react-emoji';\r\nimport PostEdit from './PostEdit';\r\nimport Comment from './Comment';\r\nimport {avatarInfo} from '../helper';\r\nimport {fetchPosts, fetchSomePosts, deletePost} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\nclass PostsLists extends React.Component {\r\n    state = {\r\n        id: null,\r\n        show: false,\r\n    };\r\n    componentDidMount() {\r\n        if(this.props.user.isLoggedIn) this.props.fetchSomePosts(this.props.user.access_token,8);\r\n    }\r\n    more = () => {\r\n        this.props.fetchSomePosts(this.props.user.access_token,this.props.post.length+3);\r\n    }\r\n\r\n    deleteOnClick = (id) => {\r\n        this.props.deletePost(this.props.user.access_token,id);\r\n        }\r\n    editOpen = (id) => {\r\n        this.setState({id:id, show:true});\r\n    }\r\n    editClose = () => {\r\n        this.setState({show:false});\r\n    }\r\n    displayComment = (id) => {\r\n        return(\r\n            <Comment id ={id}/>\r\n        );\r\n    }\r\n    renderDeleteEdit = (post) => {\r\n        if((post.username === this.props.user.username) || this.props.user.role) {\r\n            return (\r\n                <div className=\"post-buttons-containter\">\r\n                <i className=\"edit icon large button-edit\" onClick={this.editOpen.bind(this,post.id)} Aria-label=\"click to edit post\"></i>\r\n                <i className=\"trash icon large button-delete\" onClick={this.deleteOnClick.bind(this,post.id)} Aria-label=\"click to delete post\"></i>\r\n\r\n                {/* <button className=\"button-edit\" onClick={this.editOpen.bind(this,post.id)}>Edit</button> */}\r\n                {/* <button className=\"button-delete\" onClick={this.deleteOnClick.bind(this,post.id)}>Delete</button> */}\r\n                </div>\r\n            )};\r\n    } \r\n\r\n    renderPosts = () => {\r\n        return this.props.post.map(post => {\r\n            return (\r\n                <div className=\"post\" key={post.id}>\r\n                    <div className=\"post-text-container\">{ReactEmoji.emojify(post.post)}</div>\r\n                    <img src={this.props.avatar[post.username]? avatarInfo[this.props.avatar[post.username].avatar]: \"https://semantic-ui.com/images/avatar2/large/elyse.png\"} alt=\"image\" className=\"ui avatar image\"/>\r\n                    <div className=\"post-username-container\">{post.username}</div>\r\n                    <div className=\"post-date-container\">{post.date.substr(0,10)}</div>\r\n                    {this.renderDeleteEdit(post)}\r\n                    {this.displayComment(post.id)}\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n    checkMore() {\r\n        if(!this.props.user.noMoreAll) return <button onClick={this.more}>More</button>;\r\n    }\r\n    renderEdit() {\r\n        if(this.state.show){\r\n           return <PostEdit id={this.state.id} show={this.state.show} editClose={this.editClose} type={1}/>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.props.post.length){\r\n            return (\r\n                <div className=\"posts_container\">\r\n                    {this.checkMore()}\r\n                    {this.renderPosts()}\r\n                    {this.renderEdit()}\r\n                </div>\r\n    \r\n            );\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user, post: Object.values(state.post),avatar:state.avatar};\r\n};\r\n\r\nexport default connect(mapStateToProps,{fetchPosts,fetchSomePosts,deletePost})(PostsLists);","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {createPost} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass CreatePost extends React.Component {\r\n\r\n    renderInput({input,placeholder}){\r\n        return (\r\n               <textarea className=\"input-post\" {...input} maxLength=\"150\" placeholder={placeholder} rows=\"3\" required></textarea>\r\n        );\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.createPost(values,this.props.user.access_token);\r\n        this.props.change(\"post\",null);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"input-post-container\">\r\n            <form className=\"test\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"post\"  type=\"text\" placeholder=\"What are you thinking about?\" component={this.renderInput}/>\r\n                <button className=\"post-button\">Post</button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user};\r\n};\r\n\r\nexport default connect(mapStateToProps,{createPost})(reduxForm({\r\n    form: 'post'\r\n})(CreatePost));","import React from 'react';\r\nimport {reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {logoutUser} from '../actions';\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass Logout extends React.Component {\r\n\r\n\r\n    onSubmit = () => {\r\n        this.props.logoutUser(this.props.user.access_token)\r\n        window.localStorage.clear();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <button className=\"logout\">Logout</button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user};\r\n};\r\n\r\nexport default connect(mapStateToProps,{logoutUser})(reduxForm({\r\n    form: 'logout'\r\n})(Logout));","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Logout from './Logout';\r\nimport {avatarInfo} from '../helper';\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className=\"header-custom\">\r\n            <img src={props.avatar[props.user.username]? avatarInfo[props.avatar[props.user.username].avatar]: \"https://semantic-ui.com/images/avatar2/large/elyse.png\"} alt=\"image\" className=\"ui avatar image\"/>\r\n            <Link className=\"nav-item\" to=\"/profile\">{props.user.username}</Link>\r\n            <Link className=\"nav-item\" to=\"/dashboard\">home</Link>\r\n            <Logout/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user, avatar:state.avatar};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect,Link} from 'react-router-dom';\r\nimport {fetchAvatars} from '../actions';\r\nimport PostsLists from './PostsLists';\r\nimport CreatePost from './CreatePost';\r\nimport Header from './Header';\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n    componentDidMount(){\r\n        this.props.fetchAvatars(this.props.user.access_token);\r\n    }\r\n    render(){\r\n        if(!this.props.user.isLoggedIn) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div className=\"cover_page\" style={{backgroundColor:'#f0f2f5'}}>\r\n            <div className=\"test1\">\r\n            <Header/>\r\n            <CreatePost/>\r\n            <PostsLists/>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user};\r\n};\r\n\r\nexport default connect(mapStateToProps,{fetchAvatars})(Dashboard);","import React from 'react';\r\nimport { Dropdown } from 'semantic-ui-react';\r\nimport {connect} from 'react-redux';\r\nimport {updateAvatar} from '../actions';\r\nimport {avatarOptions} from '../helper';\r\n\r\nclass AvatarDropdown extends React.Component {\r\n\r\n  onAvatarChange = (e,data) => {\r\n    this.props.updateAvatar(data.value,this.props.user.username,this.props.user.access_token);\r\n  }\r\n\r\n  render() {\r\n  return (\r\n    <Dropdown\r\n      text='Update Avatar'\r\n      icon='file image icon'\r\n      floating\r\n      labeled\r\n      button\r\n      className='icon'\r\n    >\r\n      <Dropdown.Menu>\r\n        <Dropdown.Header content='Pick your avatar' />\r\n        {avatarOptions.map((option) => (\r\n          <Dropdown.Item onClick={this.onAvatarChange} key={option.value} {...option} />\r\n        ))}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n        }\r\n} \r\n\r\nconst mapStateToProps = state => {\r\n  return {user: state.user};\r\n};\r\n\r\nexport default connect(mapStateToProps,{updateAvatar})(AvatarDropdown); ","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport AvatarDropdown from './AvatarDropdown';\r\nimport {avatarInfo} from '../helper';\r\n\r\nimport '../style.css';\r\n\r\nclass Personal extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"personal-container\">\r\n                <div className=\"image-container\">\r\n                    <img src={this.props.avatar[this.props.user.username]? avatarInfo[this.props.avatar[this.props.user.username].avatar]: \"https://semantic-ui.com/images/avatar2/large/elyse.png\"} alt=\"image\" className=\"ui large image\"/>\r\n                </div>\r\n                <div className=\"info-container\">\r\n                    <span className=\"info-text\">Username:</span> {this.props.user.username}<br/>\r\n                    <span className=\"info-text\">Email:</span> {this.props.user.email}\r\n                    <div className=\"dropdown-icon\">\r\n                        <AvatarDropdown/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user, avatar:state.avatar};\r\n};\r\n\r\nexport default connect(mapStateToProps,{})(reduxForm({\r\n    form: 'file'\r\n})(Personal));","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link,Redirect} from 'react-router-dom';\r\nimport ReactEmoji from 'react-emoji';\r\nimport {deletePost,fetchUserPosts} from '../actions';\r\nimport PostEdit from './PostEdit';\r\nimport Header from './Header';\r\nimport Personal from './Personal';\r\nimport {avatarInfo} from '../helper';\r\n\r\nimport '../style.css';\r\n\r\n\r\nclass Profile extends React.Component {\r\n    state = {\r\n        id: null,\r\n        show: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        if(this.props.user.isLoggedIn) this.props.fetchUserPosts(this.props.user.access_token,this.props.user.username,8);\r\n    }\r\n    more = () => {\r\n        this.props.fetchUserPosts(this.props.user.access_token,this.props.user.username,this.props.post.length+3);\r\n    }\r\n\r\n    deleteOnClick = (id) => {\r\n        this.props.deletePost(this.props.user.access_token,id);\r\n        }\r\n    editOpen = (id) => {\r\n        this.setState({id:id, show:true});\r\n    }\r\n    editClose = () => {\r\n        this.setState({show:false});\r\n    }\r\n\r\n    renderDeleteEdit = (post) => {\r\n        if((post.username === this.props.user.username) || this.props.user.role) {\r\n            return (\r\n                <div className=\"post-buttons-containter\">\r\n                {/* <button className=\"button-edit\" onClick={this.editOpen.bind(this,post.id)}>Edit</button>\r\n                <button className=\"button-delete\" onClick={this.deleteOnClick.bind(this,post.id)}>Delete</button> */}\r\n                <i className=\"edit icon large button-edit\" onClick={this.editOpen.bind(this,post.id)} Aria-label=\"click to edit post\"></i>\r\n                <i className=\"trash icon large button-delete\" onClick={this.deleteOnClick.bind(this,post.id)} Aria-label=\"click to delete post\"></i>\r\n\r\n                </div>\r\n            )};\r\n    } \r\n\r\n    renderPosts() {\r\n        return this.props.post.map(post => {\r\n                return (\r\n                    <div className=\"post\" key={post.id}>\r\n                        <div className=\"post-text-container\">{ReactEmoji.emojify(post.post)}</div>\r\n                        <img src={this.props.avatar[post.username]? avatarInfo[this.props.avatar[post.username].avatar]: \"https://semantic-ui.com/images/avatar2/large/elyse.png\"} alt=\"image\" className=\"ui avatar image\"/>\r\n                        <div className=\"post-username-container\">{post.username}</div>\r\n                        <div className=\"post-date-container\">{post.date.substr(0,10)}</div>\r\n                        {this.renderDeleteEdit(post)}\r\n                    </div>\r\n                );\r\n        });\r\n    }\r\n    checkMore() {\r\n        if(!this.props.user.noMoreUser) return <button onClick={this.more}>More</button>;\r\n    }\r\n    renderEdit() {\r\n        if(this.state.show){\r\n           return <PostEdit id={this.state.id} show={this.state.show} editClose={this.editClose} type={2}/>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.user.isLoggedIn) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div className=\"cover_page\" style={{backgroundColor:'#f0f2f5'}}>\r\n            <div className=\"test1\">\r\n            <Header/>\r\n            <Personal/>\r\n            <div className=\"posts_container\">\r\n                {this.checkMore()}      \r\n                {this.renderPosts()}\r\n                {this.renderEdit()}\r\n            </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {user: state.user, post: Object.values(state.userPost), avatar:state.avatar};\r\n};\r\n\r\nexport default connect(mapStateToProps,{fetchUserPosts,deletePost})(Profile);","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport Main from './Main';\r\nimport PostEdit from './PostEdit';\r\nimport Dashboard from './Dashboard';\r\nimport Profile from './Profile';\r\nimport '../style.css';\r\n\r\n\r\nclass App extends React.Component {\r\n    render(){\r\n        return (\r\n        <div className=\"cover_page\">\r\n            <BrowserRouter>\r\n                <div className=\"cover_page\">\r\n                    <Route path=\"/\" exact component={Main}/>\r\n                    <Route path=\"/dashboard\" exact component={Dashboard}/>\r\n                    {/*<Route path=\"/posts/edit/:id\" exact component={PostEdit}/>*/}\r\n                    <Route path=\"/profile\" exact component={Profile}/>\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App","import {loginUser,logoutUser,fetchPosts,fetchSomePosts} from '../actions';\r\n\r\nexport default (state={status:200, avatar:\"https://semantic-ui.com/images/avatar/small/stevie.jpg\"}, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_USER':\r\n            return {...state, ...action.payload}\r\n        case 'LOGOUT_USER':\r\n            return {...state, ...action.payload}\r\n        case 'LOGIN_ERROR':\r\n            return {...state, ...action.payload}\r\n        case 'REGISTER_USER':\r\n            return {...state, ...action.payload}\r\n        case 'REGISTER_ERROR':\r\n            return {...state, ...action.payload}\r\n        case 'AUTH_ERROR':\r\n            return {...state, ...action.payload}\r\n        case 'NO_MORE':\r\n            return {...state, ...action.payload}\r\n        case 'UPDATE_AVATAR':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n};","import _ from 'lodash';\r\nimport {fetchAvatars,updateAvatar} from '../actions';\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_AVATARS':\r\n            return {...state,..._.mapKeys(action.payload, 'username')};\r\n        case 'UPDATE_AVATAR':\r\n            return {...state,..._.mapKeys(action.payload, 'username')};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import {combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport userReducer from './userReducer';\r\nimport postsReducer from './postReducer';\r\nimport userPostsReducer from './userPostsReducer';\r\nimport commentReducer from './commentReducer';\r\nimport avatarReducer from './avatarReducer';\r\n\r\nexport default combineReducers({\r\n    form: formReducer,\r\n    user: userReducer,\r\n    post: postsReducer,\r\n    userPost: userPostsReducer,\r\n    comment: commentReducer,\r\n    avatar: avatarReducer\r\n});\r\n","import _ from 'lodash';\r\nimport {fetchPosts,fetchSomePosts,createPost,deletePost,editPost} from '../actions';\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POSTS':\r\n            return {...state,..._.mapKeys(action.payload, 'id')};\r\n        case 'CREATE_POST':\r\n            return {...state,..._.mapKeys(action.payload, 'id')};\r\n        case 'DELETE_POST':\r\n            return _.omit(state,action.payload);    \r\n        case 'EDIT_POST':\r\n            return {...state,..._.mapKeys([action.payload], 'id')};\r\n        default:\r\n            return state;\r\n    }\r\n};","import _ from 'lodash';\r\nimport {fetchUserPosts,editPost,deletePost} from '../actions';\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_USER_POSTS':\r\n            return {...state,..._.mapKeys(action.payload, 'id')};\r\n        case 'DELETE_POST':\r\n            return _.omit(state,action.payload);        \r\n        case 'EDIT_USER_POST':\r\n            return {...state,..._.mapKeys([action.payload], 'id')};\r\n        default:\r\n            return state;\r\n    }\r\n};","import _ from 'lodash';\r\nimport {createComment,fetchComments,deleteComment} from '../actions';\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case 'CREATE_COMMENT':\r\n            return {...state,...action.payload};\r\n        case 'FETCH_COMMENTS':\r\n            return {...state,...action.payload};\r\n        case 'DELETE_COMMENT':\r\n            return {...state,...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore,applyMiddleware} from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst presistedState = loadFromSessionStorage();\r\n\r\nconst store=createStore(reducers,presistedState,applyMiddleware(reduxThunk));\r\n\r\nReactDom.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>, \r\n  document.querySelector('#root')\r\n);\r\n\r\nfunction saveToSessionStorage(state) {\r\n  const serializedState = JSON.stringify(state);\r\n  sessionStorage.setItem('state', serializedState);\r\n}\r\n\r\nfunction loadFromSessionStorage(){\r\n  const serializedState = sessionStorage.getItem('state');\r\n  if(serializedState===null) return undefined;\r\n  return JSON.parse(serializedState)\r\n}\r\n\r\nstore.subscribe(() => saveToSessionStorage(store.getState()));\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}